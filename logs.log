2024-09-19 17:46:42,618:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 17:46:42,618:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 17:46:42,618:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 17:46:42,618:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 17:46:42,987:INFO:Initializing load_model()
2024-09-19 17:46:42,988:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-19 17:46:43,840:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 17:46:43,840:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 17:46:43,840:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 17:46:43,840:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 17:46:44,079:INFO:Initializing load_model()
2024-09-19 17:46:44,079:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-19 17:47:31,866:INFO:Initializing predict_model()
2024-09-19 17:47:31,866:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17f8d3650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'SibSp', 'Parch'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17d4b4490>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f8ca2a0>)
2024-09-19 17:47:31,866:INFO:Checking exceptions
2024-09-19 17:47:31,866:INFO:Preloading libraries
2024-09-19 17:47:31,866:INFO:Set up data.
2024-09-19 17:47:31,870:INFO:Set up index.
2024-09-19 17:51:57,276:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 17:51:57,276:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 17:51:57,276:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 17:51:57,276:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 17:51:57,673:INFO:Initializing load_model()
2024-09-19 17:51:57,674:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-19 17:51:58,526:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 17:51:58,526:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 17:51:58,527:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 17:51:58,527:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 17:51:58,774:INFO:Initializing load_model()
2024-09-19 17:51:58,774:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-19 17:52:18,956:INFO:Initializing predict_model()
2024-09-19 17:52:18,957:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1574b6550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'SibSp', 'Parch'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x15743f290>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16c1523e0>)
2024-09-19 17:52:18,957:INFO:Checking exceptions
2024-09-19 17:52:18,957:INFO:Preloading libraries
2024-09-19 17:52:18,957:INFO:Set up data.
2024-09-19 17:52:18,961:INFO:Set up index.
2024-09-19 17:56:48,949:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 17:56:48,950:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 17:56:48,950:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 17:56:48,950:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 17:56:49,309:INFO:Initializing load_model()
2024-09-19 17:56:49,309:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-19 17:56:50,171:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 17:56:50,171:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 17:56:50,171:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 17:56:50,171:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 17:56:50,429:INFO:Initializing load_model()
2024-09-19 17:56:50,429:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-19 17:57:01,200:INFO:Initializing predict_model()
2024-09-19 17:57:01,200:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16bae1e10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'SibSp', 'Parch'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x147e9cb50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16bada3e0>)
2024-09-19 17:57:01,200:INFO:Checking exceptions
2024-09-19 17:57:01,200:INFO:Preloading libraries
2024-09-19 17:57:01,201:INFO:Set up data.
2024-09-19 17:57:01,204:INFO:Set up index.
2024-09-19 18:05:20,191:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:05:20,191:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:05:20,191:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:05:20,191:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:05:20,604:INFO:Initializing load_model()
2024-09-19 18:05:20,604:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-19 18:05:21,474:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:05:21,474:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:05:21,474:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:05:21,474:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:05:21,720:INFO:Initializing load_model()
2024-09-19 18:05:21,720:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-19 18:05:57,604:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:05:57,604:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:05:57,604:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:05:57,604:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:05:57,969:INFO:Initializing load_model()
2024-09-19 18:05:57,970:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-19 18:05:58,909:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:05:58,909:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:05:58,909:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:05:58,909:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:05:59,155:INFO:Initializing load_model()
2024-09-19 18:05:59,155:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-19 18:06:14,560:INFO:Initializing predict_model()
2024-09-19 18:06:14,561:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17b513b10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17a63f810>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17b525bc0>)
2024-09-19 18:06:14,561:INFO:Checking exceptions
2024-09-19 18:06:14,561:INFO:Preloading libraries
2024-09-19 18:06:14,561:INFO:Set up data.
2024-09-19 18:06:14,564:INFO:Set up index.
2024-09-19 18:09:24,731:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:09:24,731:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:09:24,731:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:09:24,731:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:09:25,123:INFO:Initializing load_model()
2024-09-19 18:09:25,123:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-19 18:09:26,020:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:09:26,020:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:09:26,020:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:09:26,020:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:09:26,265:INFO:Initializing load_model()
2024-09-19 18:09:26,265:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-19 18:10:17,575:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:10:17,575:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:10:17,575:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:10:17,575:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:10:17,826:INFO:Initializing load_model()
2024-09-19 18:10:17,826:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-19 18:10:18,671:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:10:18,671:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:10:18,671:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:10:18,671:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:10:18,917:INFO:Initializing load_model()
2024-09-19 18:10:18,917:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-19 18:10:33,798:INFO:Initializing predict_model()
2024-09-19 18:10:33,798:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17f88c1d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17ca9cb90>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f851580>)
2024-09-19 18:10:33,798:INFO:Checking exceptions
2024-09-19 18:10:33,798:INFO:Preloading libraries
2024-09-19 18:10:33,799:INFO:Set up data.
2024-09-19 18:10:33,802:INFO:Set up index.
2024-09-19 18:19:53,467:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:19:53,467:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:19:53,467:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:19:53,467:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:19:53,858:INFO:Initializing load_model()
2024-09-19 18:19:53,858:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-19 18:20:26,842:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:20:26,842:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:20:26,842:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:20:26,842:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:20:27,082:INFO:Initializing load_model()
2024-09-19 18:20:27,082:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-19 18:21:58,883:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:21:58,883:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:21:58,883:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:21:58,883:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:21:59,128:INFO:Initializing load_model()
2024-09-19 18:21:59,128:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-19 18:21:59,983:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:21:59,983:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:21:59,983:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:21:59,983:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:22:00,229:INFO:Initializing load_model()
2024-09-19 18:22:00,229:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-19 18:22:13,767:INFO:Initializing predict_model()
2024-09-19 18:22:13,767:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1694ab050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x169448090>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x169b263e0>)
2024-09-19 18:22:13,767:INFO:Checking exceptions
2024-09-19 18:22:13,767:INFO:Preloading libraries
2024-09-19 18:22:13,768:INFO:Set up data.
2024-09-19 18:22:13,771:INFO:Set up index.
2024-09-19 18:26:50,825:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:26:50,825:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:26:50,825:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:26:50,825:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:26:51,068:INFO:Initializing load_model()
2024-09-19 18:26:51,068:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-19 18:26:51,911:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:26:51,911:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:26:51,912:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:26:51,912:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-19 18:26:52,149:INFO:Initializing load_model()
2024-09-19 18:26:52,149:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-19 18:27:01,236:INFO:Initializing predict_model()
2024-09-19 18:27:01,236:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17f2abc50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17d23fa90>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f60a660>)
2024-09-19 18:27:01,236:INFO:Checking exceptions
2024-09-19 18:27:01,236:INFO:Preloading libraries
2024-09-19 18:27:01,237:INFO:Set up data.
2024-09-19 18:27:01,240:INFO:Set up index.
2024-09-20 10:00:25,321:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:00:25,321:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:00:25,321:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:00:25,321:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:00:25,681:INFO:Initializing load_model()
2024-09-20 10:00:25,681:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 10:00:26,557:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:00:26,558:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:00:26,558:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:00:26,558:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:00:26,807:INFO:Initializing load_model()
2024-09-20 10:00:26,807:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 10:00:35,624:INFO:Initializing predict_model()
2024-09-20 10:00:35,624:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x147b4e4d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x147f43ad0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f652ac0>)
2024-09-20 10:00:35,624:INFO:Checking exceptions
2024-09-20 10:00:35,624:INFO:Preloading libraries
2024-09-20 10:00:35,624:INFO:Set up data.
2024-09-20 10:00:35,628:INFO:Set up index.
2024-09-20 10:04:36,864:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:04:36,864:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:04:36,864:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:04:36,864:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:04:37,108:INFO:Initializing load_model()
2024-09-20 10:04:37,108:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 10:04:37,947:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:04:37,947:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:04:37,947:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:04:37,947:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:04:38,204:INFO:Initializing load_model()
2024-09-20 10:04:38,204:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 10:04:44,985:INFO:Initializing predict_model()
2024-09-20 10:04:44,985:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1798b52d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17983fdd0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x179f16700>)
2024-09-20 10:04:44,985:INFO:Checking exceptions
2024-09-20 10:04:44,985:INFO:Preloading libraries
2024-09-20 10:04:44,985:INFO:Set up data.
2024-09-20 10:04:44,989:INFO:Set up index.
2024-09-20 10:05:18,008:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:05:18,008:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:05:18,008:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:05:18,008:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:05:18,328:INFO:Initializing load_model()
2024-09-20 10:05:18,328:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 10:05:19,168:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:05:19,168:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:05:19,168:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:05:19,168:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:05:19,408:INFO:Initializing load_model()
2024-09-20 10:05:19,408:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 10:05:29,077:INFO:Initializing predict_model()
2024-09-20 10:05:29,077:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1680b52d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x16803ff10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x168612660>)
2024-09-20 10:05:29,077:INFO:Checking exceptions
2024-09-20 10:05:29,077:INFO:Preloading libraries
2024-09-20 10:05:29,078:INFO:Set up data.
2024-09-20 10:05:29,081:INFO:Set up index.
2024-09-20 10:05:30,865:INFO:PyCaret ClassificationExperiment
2024-09-20 10:05:30,866:INFO:Logging name: clf-default-name
2024-09-20 10:05:30,866:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-09-20 10:05:30,866:INFO:version 3.2.1
2024-09-20 10:05:30,866:INFO:Initializing setup()
2024-09-20 10:05:30,866:INFO:self.USI: f65e
2024-09-20 10:05:30,866:INFO:self._variable_keys: {'_ml_usecase', '_available_plots', 'y_test', 'fold_generator', 'fix_imbalance', 'y', 'fold_shuffle_param', 'memory', 'exp_id', 'y_train', 'n_jobs_param', 'fold_groups_param', 'is_multiclass', 'idx', 'pipeline', 'gpu_n_jobs_param', 'X_train', 'data', 'html_param', 'logging_param', 'USI', 'seed', 'target_param', 'log_plots_param', 'gpu_param', 'exp_name_log', 'X', 'X_test'}
2024-09-20 10:05:30,866:INFO:Checking environment
2024-09-20 10:05:30,866:INFO:python_version: 3.11.4
2024-09-20 10:05:30,866:INFO:python_build: ('v3.11.4:d2340ef257', 'Jun  6 2023 19:15:51')
2024-09-20 10:05:30,866:INFO:machine: arm64
2024-09-20 10:05:30,900:INFO:platform: macOS-14.6.1-arm64-arm-64bit
2024-09-20 10:05:30,900:INFO:Memory: svmem(total=8589934592, available=2675326976, percent=68.9, used=4040196096, free=76742656, active=2652094464, inactive=2593947648, wired=1388101632)
2024-09-20 10:05:30,900:INFO:Physical Core: 8
2024-09-20 10:05:30,900:INFO:Logical Core: 8
2024-09-20 10:05:30,900:INFO:Checking libraries
2024-09-20 10:05:30,900:INFO:System:
2024-09-20 10:05:30,900:INFO:    python: 3.11.4 (v3.11.4:d2340ef257, Jun  6 2023, 19:15:51) [Clang 13.0.0 (clang-1300.0.29.30)]
2024-09-20 10:05:30,900:INFO:executable: /Library/Frameworks/Python.framework/Versions/3.11/bin/python3
2024-09-20 10:05:30,900:INFO:   machine: macOS-14.6.1-arm64-arm-64bit
2024-09-20 10:05:30,900:INFO:PyCaret required dependencies:
2024-09-20 10:05:30,901:INFO:                 pip: 24.2
2024-09-20 10:05:30,901:INFO:          setuptools: 68.2.2
2024-09-20 10:05:30,901:INFO:             pycaret: 3.2.1
2024-09-20 10:05:30,901:INFO:             IPython: 8.17.2
2024-09-20 10:05:30,901:INFO:          ipywidgets: 8.1.1
2024-09-20 10:05:30,901:INFO:                tqdm: 4.66.1
2024-09-20 10:05:30,901:INFO:               numpy: 1.25.2
2024-09-20 10:05:30,901:INFO:              pandas: 1.5.3
2024-09-20 10:05:30,901:INFO:              jinja2: 3.1.2
2024-09-20 10:05:30,901:INFO:               scipy: 1.10.1
2024-09-20 10:05:30,901:INFO:              joblib: 1.3.2
2024-09-20 10:05:30,901:INFO:             sklearn: 1.2.2
2024-09-20 10:05:30,901:INFO:                pyod: 1.1.2
2024-09-20 10:05:30,901:INFO:            imblearn: 0.12.0
2024-09-20 10:05:30,901:INFO:   category_encoders: 2.6.3
2024-09-20 10:05:30,901:INFO:            lightgbm: 4.1.0
2024-09-20 10:05:30,901:INFO:               numba: 0.58.1
2024-09-20 10:05:30,901:INFO:            requests: 2.31.0
2024-09-20 10:05:30,901:INFO:          matplotlib: 3.6.0
2024-09-20 10:05:30,901:INFO:          scikitplot: 0.3.7
2024-09-20 10:05:30,901:INFO:         yellowbrick: 1.5
2024-09-20 10:05:30,901:INFO:              plotly: 5.18.0
2024-09-20 10:05:30,901:INFO:    plotly-resampler: Not installed
2024-09-20 10:05:30,901:INFO:             kaleido: 0.2.1
2024-09-20 10:05:30,901:INFO:           schemdraw: 0.15
2024-09-20 10:05:30,901:INFO:         statsmodels: 0.14.0
2024-09-20 10:05:30,901:INFO:              sktime: 0.21.1
2024-09-20 10:05:30,901:INFO:               tbats: 1.1.3
2024-09-20 10:05:30,901:INFO:            pmdarima: 2.0.4
2024-09-20 10:05:30,901:INFO:              psutil: 5.9.6
2024-09-20 10:05:30,901:INFO:          markupsafe: 2.1.3
2024-09-20 10:05:30,901:INFO:             pickle5: Not installed
2024-09-20 10:05:30,901:INFO:         cloudpickle: 3.0.0
2024-09-20 10:05:30,901:INFO:         deprecation: 2.1.0
2024-09-20 10:05:30,901:INFO:              xxhash: 3.4.1
2024-09-20 10:05:30,901:INFO:           wurlitzer: 3.0.3
2024-09-20 10:05:30,901:INFO:PyCaret optional dependencies:
2024-09-20 10:05:30,908:INFO:                shap: 0.43.0
2024-09-20 10:05:30,908:INFO:           interpret: Not installed
2024-09-20 10:05:30,908:INFO:                umap: Not installed
2024-09-20 10:05:30,908:INFO:     ydata_profiling: Not installed
2024-09-20 10:05:30,908:INFO:  explainerdashboard: Not installed
2024-09-20 10:05:30,908:INFO:             autoviz: Not installed
2024-09-20 10:05:30,908:INFO:           fairlearn: Not installed
2024-09-20 10:05:30,908:INFO:          deepchecks: Not installed
2024-09-20 10:05:30,908:INFO:             xgboost: 2.0.2
2024-09-20 10:05:30,908:INFO:            catboost: 1.2.2
2024-09-20 10:05:30,908:INFO:              kmodes: Not installed
2024-09-20 10:05:30,908:INFO:             mlxtend: Not installed
2024-09-20 10:05:30,909:INFO:       statsforecast: Not installed
2024-09-20 10:05:30,909:INFO:        tune_sklearn: Not installed
2024-09-20 10:05:30,909:INFO:                 ray: Not installed
2024-09-20 10:05:30,909:INFO:            hyperopt: Not installed
2024-09-20 10:05:30,909:INFO:              optuna: 3.5.0
2024-09-20 10:05:30,909:INFO:               skopt: Not installed
2024-09-20 10:05:30,909:INFO:              mlflow: Not installed
2024-09-20 10:05:30,909:INFO:              gradio: Not installed
2024-09-20 10:05:30,909:INFO:             fastapi: Not installed
2024-09-20 10:05:30,909:INFO:             uvicorn: Not installed
2024-09-20 10:05:30,909:INFO:              m2cgen: Not installed
2024-09-20 10:05:30,909:INFO:           evidently: Not installed
2024-09-20 10:05:30,909:INFO:               fugue: Not installed
2024-09-20 10:05:30,909:INFO:           streamlit: Not installed
2024-09-20 10:05:30,909:INFO:             prophet: Not installed
2024-09-20 10:05:30,909:INFO:None
2024-09-20 10:05:30,909:INFO:Set up data.
2024-09-20 10:06:39,759:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:06:39,759:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:06:39,759:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:06:39,759:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:06:40,048:INFO:Initializing load_model()
2024-09-20 10:06:40,048:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 10:06:40,884:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:06:40,884:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:06:40,884:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:06:40,884:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:06:41,129:INFO:Initializing load_model()
2024-09-20 10:06:41,129:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 10:06:49,187:INFO:Initializing predict_model()
2024-09-20 10:06:49,187:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157e99f90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x157e3fb90>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x168416700>)
2024-09-20 10:06:49,187:INFO:Checking exceptions
2024-09-20 10:06:49,187:INFO:Preloading libraries
2024-09-20 10:06:49,188:INFO:Set up data.
2024-09-20 10:06:49,191:INFO:Set up index.
2024-09-20 10:06:50,430:INFO:PyCaret ClassificationExperiment
2024-09-20 10:06:50,430:INFO:Logging name: clf-default-name
2024-09-20 10:06:50,430:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-09-20 10:06:50,430:INFO:version 3.2.1
2024-09-20 10:06:50,430:INFO:Initializing setup()
2024-09-20 10:06:50,430:INFO:self.USI: ea0d
2024-09-20 10:06:50,430:INFO:self._variable_keys: {'fold_shuffle_param', 'fold_groups_param', 'y_train', 'html_param', 'X_train', 'fix_imbalance', 'X_test', '_ml_usecase', 'USI', 'log_plots_param', 'target_param', 'seed', 'y_test', 'y', 'idx', 'exp_name_log', 'gpu_n_jobs_param', 'X', 'gpu_param', 'exp_id', 'pipeline', 'memory', 'is_multiclass', 'n_jobs_param', '_available_plots', 'data', 'fold_generator', 'logging_param'}
2024-09-20 10:06:50,430:INFO:Checking environment
2024-09-20 10:06:50,430:INFO:python_version: 3.11.4
2024-09-20 10:06:50,431:INFO:python_build: ('v3.11.4:d2340ef257', 'Jun  6 2023 19:15:51')
2024-09-20 10:06:50,431:INFO:machine: arm64
2024-09-20 10:06:50,459:INFO:platform: macOS-14.6.1-arm64-arm-64bit
2024-09-20 10:06:50,459:INFO:Memory: svmem(total=8589934592, available=2678947840, percent=68.8, used=4049420288, free=73973760, active=2646589440, inactive=2602467328, wired=1402830848)
2024-09-20 10:06:50,459:INFO:Physical Core: 8
2024-09-20 10:06:50,459:INFO:Logical Core: 8
2024-09-20 10:06:50,459:INFO:Checking libraries
2024-09-20 10:06:50,459:INFO:System:
2024-09-20 10:06:50,459:INFO:    python: 3.11.4 (v3.11.4:d2340ef257, Jun  6 2023, 19:15:51) [Clang 13.0.0 (clang-1300.0.29.30)]
2024-09-20 10:06:50,459:INFO:executable: /Library/Frameworks/Python.framework/Versions/3.11/bin/python3
2024-09-20 10:06:50,459:INFO:   machine: macOS-14.6.1-arm64-arm-64bit
2024-09-20 10:06:50,459:INFO:PyCaret required dependencies:
2024-09-20 10:06:50,460:INFO:                 pip: 24.2
2024-09-20 10:06:50,460:INFO:          setuptools: 68.2.2
2024-09-20 10:06:50,460:INFO:             pycaret: 3.2.1
2024-09-20 10:06:50,460:INFO:             IPython: 8.17.2
2024-09-20 10:06:50,460:INFO:          ipywidgets: 8.1.1
2024-09-20 10:06:50,460:INFO:                tqdm: 4.66.1
2024-09-20 10:06:50,460:INFO:               numpy: 1.25.2
2024-09-20 10:06:50,460:INFO:              pandas: 1.5.3
2024-09-20 10:06:50,460:INFO:              jinja2: 3.1.2
2024-09-20 10:06:50,460:INFO:               scipy: 1.10.1
2024-09-20 10:06:50,460:INFO:              joblib: 1.3.2
2024-09-20 10:06:50,460:INFO:             sklearn: 1.2.2
2024-09-20 10:06:50,460:INFO:                pyod: 1.1.2
2024-09-20 10:06:50,460:INFO:            imblearn: 0.12.0
2024-09-20 10:06:50,460:INFO:   category_encoders: 2.6.3
2024-09-20 10:06:50,460:INFO:            lightgbm: 4.1.0
2024-09-20 10:06:50,460:INFO:               numba: 0.58.1
2024-09-20 10:06:50,460:INFO:            requests: 2.31.0
2024-09-20 10:06:50,460:INFO:          matplotlib: 3.6.0
2024-09-20 10:06:50,460:INFO:          scikitplot: 0.3.7
2024-09-20 10:06:50,460:INFO:         yellowbrick: 1.5
2024-09-20 10:06:50,460:INFO:              plotly: 5.18.0
2024-09-20 10:06:50,460:INFO:    plotly-resampler: Not installed
2024-09-20 10:06:50,460:INFO:             kaleido: 0.2.1
2024-09-20 10:06:50,460:INFO:           schemdraw: 0.15
2024-09-20 10:06:50,460:INFO:         statsmodels: 0.14.0
2024-09-20 10:06:50,460:INFO:              sktime: 0.21.1
2024-09-20 10:06:50,460:INFO:               tbats: 1.1.3
2024-09-20 10:06:50,460:INFO:            pmdarima: 2.0.4
2024-09-20 10:06:50,460:INFO:              psutil: 5.9.6
2024-09-20 10:06:50,460:INFO:          markupsafe: 2.1.3
2024-09-20 10:06:50,460:INFO:             pickle5: Not installed
2024-09-20 10:06:50,460:INFO:         cloudpickle: 3.0.0
2024-09-20 10:06:50,460:INFO:         deprecation: 2.1.0
2024-09-20 10:06:50,460:INFO:              xxhash: 3.4.1
2024-09-20 10:06:50,460:INFO:           wurlitzer: 3.0.3
2024-09-20 10:06:50,460:INFO:PyCaret optional dependencies:
2024-09-20 10:06:50,468:INFO:                shap: 0.43.0
2024-09-20 10:06:50,468:INFO:           interpret: Not installed
2024-09-20 10:06:50,468:INFO:                umap: Not installed
2024-09-20 10:06:50,468:INFO:     ydata_profiling: Not installed
2024-09-20 10:06:50,468:INFO:  explainerdashboard: Not installed
2024-09-20 10:06:50,468:INFO:             autoviz: Not installed
2024-09-20 10:06:50,468:INFO:           fairlearn: Not installed
2024-09-20 10:06:50,468:INFO:          deepchecks: Not installed
2024-09-20 10:06:50,468:INFO:             xgboost: 2.0.2
2024-09-20 10:06:50,468:INFO:            catboost: 1.2.2
2024-09-20 10:06:50,468:INFO:              kmodes: Not installed
2024-09-20 10:06:50,468:INFO:             mlxtend: Not installed
2024-09-20 10:06:50,468:INFO:       statsforecast: Not installed
2024-09-20 10:06:50,468:INFO:        tune_sklearn: Not installed
2024-09-20 10:06:50,468:INFO:                 ray: Not installed
2024-09-20 10:06:50,468:INFO:            hyperopt: Not installed
2024-09-20 10:06:50,468:INFO:              optuna: 3.5.0
2024-09-20 10:06:50,468:INFO:               skopt: Not installed
2024-09-20 10:06:50,468:INFO:              mlflow: Not installed
2024-09-20 10:06:50,468:INFO:              gradio: Not installed
2024-09-20 10:06:50,468:INFO:             fastapi: Not installed
2024-09-20 10:06:50,468:INFO:             uvicorn: Not installed
2024-09-20 10:06:50,468:INFO:              m2cgen: Not installed
2024-09-20 10:06:50,468:INFO:           evidently: Not installed
2024-09-20 10:06:50,468:INFO:               fugue: Not installed
2024-09-20 10:06:50,468:INFO:           streamlit: Not installed
2024-09-20 10:06:50,468:INFO:             prophet: Not installed
2024-09-20 10:06:50,468:INFO:None
2024-09-20 10:06:50,468:INFO:Set up data.
2024-09-20 10:06:50,472:INFO:Set up folding strategy.
2024-09-20 10:06:50,472:INFO:Set up train/test split.
2024-09-20 10:10:23,963:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:10:23,963:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:10:23,963:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:10:23,963:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:10:24,265:INFO:Initializing load_model()
2024-09-20 10:10:24,265:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 10:10:25,138:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:10:25,138:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:10:25,138:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:10:25,138:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:10:25,382:INFO:Initializing load_model()
2024-09-20 10:10:25,382:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 10:10:35,161:INFO:Initializing predict_model()
2024-09-20 10:10:35,162:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17064e490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x1709b6e90>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170f165c0>)
2024-09-20 10:10:35,162:INFO:Checking exceptions
2024-09-20 10:10:35,162:INFO:Preloading libraries
2024-09-20 10:10:35,162:INFO:Set up data.
2024-09-20 10:10:35,165:INFO:Set up index.
2024-09-20 10:22:21,724:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:22:21,724:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:22:21,724:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:22:21,724:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:22:22,128:INFO:Initializing load_model()
2024-09-20 10:22:22,128:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 10:23:09,478:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:23:09,478:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:23:09,478:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:23:09,478:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:23:09,720:INFO:Initializing load_model()
2024-09-20 10:23:09,720:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 10:23:10,569:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:23:10,569:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:23:10,569:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:23:10,569:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:23:10,815:INFO:Initializing load_model()
2024-09-20 10:23:10,815:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 10:25:06,782:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:25:06,782:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:25:06,782:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:25:06,782:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:25:07,028:INFO:Initializing load_model()
2024-09-20 10:25:07,028:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 10:25:07,864:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:25:07,864:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:25:07,864:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:25:07,864:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:25:08,109:INFO:Initializing load_model()
2024-09-20 10:25:08,109:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 10:27:35,649:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:27:35,649:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:27:35,649:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:27:35,649:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:27:36,007:INFO:Initializing load_model()
2024-09-20 10:27:36,007:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 10:27:36,881:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:27:36,881:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:27:36,881:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:27:36,881:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 10:27:37,125:INFO:Initializing load_model()
2024-09-20 10:27:37,125:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 10:27:42,809:INFO:Initializing predict_model()
2024-09-20 10:27:42,809:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16f038390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x16ca43a10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f016020>)
2024-09-20 10:27:42,810:INFO:Checking exceptions
2024-09-20 10:27:42,810:INFO:Preloading libraries
2024-09-20 10:27:42,812:INFO:Set up data.
2024-09-20 10:27:42,817:INFO:Set up index.
2024-09-20 11:12:16,748:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:12:16,749:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:12:16,749:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:12:16,749:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:12:17,681:INFO:Initializing load_model()
2024-09-20 11:12:17,681:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 11:12:24,817:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:12:24,817:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:12:24,818:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:12:24,818:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:12:25,192:INFO:Initializing load_model()
2024-09-20 11:12:25,192:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 11:12:30,396:INFO:Initializing predict_model()
2024-09-20 11:12:30,397:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x161106ed0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x1604439d0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1610fdb20>)
2024-09-20 11:12:30,397:INFO:Checking exceptions
2024-09-20 11:12:30,397:INFO:Preloading libraries
2024-09-20 11:12:30,397:INFO:Set up data.
2024-09-20 11:12:30,401:INFO:Set up index.
2024-09-20 11:17:56,042:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:17:56,042:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:17:56,042:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:17:56,042:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:17:56,430:INFO:Initializing load_model()
2024-09-20 11:17:56,430:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 11:18:02,478:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:18:02,478:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:18:02,478:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:18:02,478:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:18:02,852:INFO:Initializing load_model()
2024-09-20 11:18:02,852:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 11:18:14,098:INFO:Initializing predict_model()
2024-09-20 11:18:14,098:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16e327510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x16df9cc90>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16e31db20>)
2024-09-20 11:18:14,098:INFO:Checking exceptions
2024-09-20 11:18:14,098:INFO:Preloading libraries
2024-09-20 11:18:14,099:INFO:Set up data.
2024-09-20 11:18:14,102:INFO:Set up index.
2024-09-20 11:23:29,165:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:23:29,165:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:23:29,166:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:23:29,166:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:23:29,551:INFO:Initializing load_model()
2024-09-20 11:23:29,551:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 11:23:35,630:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:23:35,630:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:23:35,630:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:23:35,630:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:23:35,996:INFO:Initializing load_model()
2024-09-20 11:23:35,996:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 11:23:51,195:INFO:Initializing predict_model()
2024-09-20 11:23:51,195:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x159d7ff90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x159c3f790>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15a325b20>)
2024-09-20 11:23:51,195:INFO:Checking exceptions
2024-09-20 11:23:51,195:INFO:Preloading libraries
2024-09-20 11:23:51,196:INFO:Set up data.
2024-09-20 11:23:51,200:INFO:Set up index.
2024-09-20 11:24:46,550:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:24:46,550:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:24:46,550:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:24:46,550:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:24:46,903:INFO:Initializing load_model()
2024-09-20 11:24:46,904:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 11:24:52,784:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:24:52,784:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:24:52,784:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:24:52,784:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:24:53,132:INFO:Initializing load_model()
2024-09-20 11:24:53,132:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 11:24:56,424:INFO:Initializing predict_model()
2024-09-20 11:24:56,424:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15627eb10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x147f9cb10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x156565b20>)
2024-09-20 11:24:56,424:INFO:Checking exceptions
2024-09-20 11:24:56,424:INFO:Preloading libraries
2024-09-20 11:24:56,424:INFO:Set up data.
2024-09-20 11:24:56,428:INFO:Set up index.
2024-09-20 11:25:01,309:INFO:Initializing predict_model()
2024-09-20 11:25:01,309:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15656e410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x147f9cb10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x156565120>)
2024-09-20 11:25:01,309:INFO:Checking exceptions
2024-09-20 11:25:01,309:INFO:Preloading libraries
2024-09-20 11:25:01,310:INFO:Set up data.
2024-09-20 11:25:01,312:INFO:Set up index.
2024-09-20 11:25:49,428:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:25:49,428:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:25:49,428:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:25:49,428:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:25:49,687:INFO:Initializing load_model()
2024-09-20 11:25:49,687:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 11:25:55,562:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:25:55,563:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:25:55,563:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:25:55,563:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:25:55,807:INFO:Initializing load_model()
2024-09-20 11:25:55,807:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 11:25:59,107:INFO:Initializing predict_model()
2024-09-20 11:25:59,108:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17ab4f590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17ae3f910>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e25db20>)
2024-09-20 11:25:59,108:INFO:Checking exceptions
2024-09-20 11:25:59,108:INFO:Preloading libraries
2024-09-20 11:25:59,108:INFO:Set up data.
2024-09-20 11:25:59,111:INFO:Set up index.
2024-09-20 11:26:01,337:INFO:Initializing predict_model()
2024-09-20 11:26:01,337:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17e267c50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17ae3f910>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e25d260>)
2024-09-20 11:26:01,338:INFO:Checking exceptions
2024-09-20 11:26:01,338:INFO:Preloading libraries
2024-09-20 11:26:01,338:INFO:Set up data.
2024-09-20 11:26:01,340:INFO:Set up index.
2024-09-20 11:31:13,976:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:31:13,976:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:31:13,976:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:31:13,976:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:31:14,401:INFO:Initializing load_model()
2024-09-20 11:31:14,401:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 11:31:20,477:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:31:20,478:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:31:20,478:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:31:20,478:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:31:20,846:INFO:Initializing load_model()
2024-09-20 11:31:20,846:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 11:31:24,736:INFO:Initializing predict_model()
2024-09-20 11:31:24,736:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16032e390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x15fdb6e90>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x160326340>)
2024-09-20 11:31:24,736:INFO:Checking exceptions
2024-09-20 11:31:24,736:INFO:Preloading libraries
2024-09-20 11:31:24,737:INFO:Set up data.
2024-09-20 11:31:24,740:INFO:Set up index.
2024-09-20 11:31:26,182:INFO:Initializing predict_model()
2024-09-20 11:31:26,183:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x160313990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x15fdb6e90>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x160326340>)
2024-09-20 11:31:26,183:INFO:Checking exceptions
2024-09-20 11:31:26,183:INFO:Preloading libraries
2024-09-20 11:31:26,183:INFO:Set up data.
2024-09-20 11:31:26,185:INFO:Set up index.
2024-09-20 11:35:22,825:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:35:22,825:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:35:22,825:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:35:22,825:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:35:23,212:INFO:Initializing load_model()
2024-09-20 11:35:23,212:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 11:35:29,340:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:35:29,340:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:35:29,340:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:35:29,340:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:35:29,728:INFO:Initializing load_model()
2024-09-20 11:35:29,728:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 11:35:35,168:INFO:Initializing predict_model()
2024-09-20 11:35:35,168:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1594f5910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x158f3fad0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x159526480>)
2024-09-20 11:35:35,168:INFO:Checking exceptions
2024-09-20 11:35:35,168:INFO:Preloading libraries
2024-09-20 11:35:35,169:INFO:Set up data.
2024-09-20 11:35:35,172:INFO:Set up index.
2024-09-20 11:35:37,324:INFO:Initializing predict_model()
2024-09-20 11:35:37,324:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15952ea50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x158f3fad0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x159526480>)
2024-09-20 11:35:37,324:INFO:Checking exceptions
2024-09-20 11:35:37,324:INFO:Preloading libraries
2024-09-20 11:35:37,324:INFO:Set up data.
2024-09-20 11:35:37,327:INFO:Set up index.
2024-09-20 11:39:19,274:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:39:19,275:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:39:19,275:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:39:19,275:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:39:19,677:INFO:Initializing load_model()
2024-09-20 11:39:19,677:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 11:39:25,775:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:39:25,775:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:39:25,775:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:39:25,775:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:39:26,141:INFO:Initializing load_model()
2024-09-20 11:39:26,142:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 11:39:29,443:INFO:Initializing predict_model()
2024-09-20 11:39:29,443:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15700ee50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x15693fc10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x157026340>)
2024-09-20 11:39:29,443:INFO:Checking exceptions
2024-09-20 11:39:29,443:INFO:Preloading libraries
2024-09-20 11:39:29,444:INFO:Set up data.
2024-09-20 11:39:29,447:INFO:Set up index.
2024-09-20 11:39:35,948:INFO:Initializing predict_model()
2024-09-20 11:39:35,948:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15702fd50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x15693fc10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x157026340>)
2024-09-20 11:39:35,948:INFO:Checking exceptions
2024-09-20 11:39:35,948:INFO:Preloading libraries
2024-09-20 11:39:35,948:INFO:Set up data.
2024-09-20 11:39:35,951:INFO:Set up index.
2024-09-20 11:41:17,272:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:41:17,272:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:41:17,272:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:41:17,272:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:41:17,681:INFO:Initializing load_model()
2024-09-20 11:41:17,681:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 11:41:23,740:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:41:23,740:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:41:23,740:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:41:23,740:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:41:24,098:INFO:Initializing load_model()
2024-09-20 11:41:24,098:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 11:41:28,058:INFO:Initializing predict_model()
2024-09-20 11:41:28,059:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x162e3d0d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x162eb4490>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x163525b20>)
2024-09-20 11:41:28,059:INFO:Checking exceptions
2024-09-20 11:41:28,059:INFO:Preloading libraries
2024-09-20 11:41:28,059:INFO:Set up data.
2024-09-20 11:41:28,063:INFO:Set up index.
2024-09-20 11:41:33,078:INFO:Initializing predict_model()
2024-09-20 11:41:33,078:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16352f110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x162eb4490>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x163525260>)
2024-09-20 11:41:33,078:INFO:Checking exceptions
2024-09-20 11:41:33,078:INFO:Preloading libraries
2024-09-20 11:41:33,079:INFO:Set up data.
2024-09-20 11:41:33,081:INFO:Set up index.
2024-09-20 11:41:36,497:INFO:Initializing predict_model()
2024-09-20 11:41:36,497:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16352cb90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x162eb4490>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x163525260>)
2024-09-20 11:41:36,497:INFO:Checking exceptions
2024-09-20 11:41:36,497:INFO:Preloading libraries
2024-09-20 11:41:36,498:INFO:Set up data.
2024-09-20 11:41:36,500:INFO:Set up index.
2024-09-20 11:42:47,392:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:42:47,392:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:42:47,392:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:42:47,392:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:42:47,675:INFO:Initializing load_model()
2024-09-20 11:42:47,675:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 11:42:53,687:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:42:53,687:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:42:53,687:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:42:53,687:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 11:42:53,973:INFO:Initializing load_model()
2024-09-20 11:42:53,974:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 11:42:57,218:INFO:Initializing predict_model()
2024-09-20 11:42:57,218:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x151bb60d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x15173f8d0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x151bc9b20>)
2024-09-20 11:42:57,218:INFO:Checking exceptions
2024-09-20 11:42:57,218:INFO:Preloading libraries
2024-09-20 11:42:57,219:INFO:Set up data.
2024-09-20 11:42:57,222:INFO:Set up index.
2024-09-20 11:42:59,847:INFO:Initializing predict_model()
2024-09-20 11:42:59,847:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x151bd2650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x15173f8d0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x151bc9120>)
2024-09-20 11:42:59,847:INFO:Checking exceptions
2024-09-20 11:42:59,847:INFO:Preloading libraries
2024-09-20 11:42:59,848:INFO:Set up data.
2024-09-20 11:42:59,851:INFO:Set up index.
2024-09-20 12:03:55,370:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:03:55,370:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:03:55,370:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:03:55,370:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:03:55,811:INFO:Initializing load_model()
2024-09-20 12:03:55,811:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 12:04:02,733:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:04:02,733:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:04:02,733:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:04:02,733:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:04:03,128:INFO:Initializing load_model()
2024-09-20 12:04:03,128:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 12:10:16,888:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:10:16,888:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:10:16,888:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:10:16,888:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:10:17,249:INFO:Initializing load_model()
2024-09-20 12:10:17,249:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 12:12:27,868:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:12:27,869:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:12:27,869:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:12:27,869:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:12:28,232:INFO:Initializing load_model()
2024-09-20 12:12:28,232:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 12:15:43,449:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:15:43,449:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:15:43,449:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:15:43,449:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:15:43,734:INFO:Initializing load_model()
2024-09-20 12:15:43,734:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 12:15:44,596:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:15:44,597:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:15:44,597:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:15:44,597:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:15:44,844:INFO:Initializing load_model()
2024-09-20 12:15:44,844:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 12:52:53,485:INFO:Initializing predict_model()
2024-09-20 12:52:53,486:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17dd23750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17b03f890>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17dd15d00>)
2024-09-20 12:52:53,486:INFO:Checking exceptions
2024-09-20 12:52:53,486:INFO:Preloading libraries
2024-09-20 12:52:53,486:INFO:Set up data.
2024-09-20 12:52:53,490:INFO:Set up index.
2024-09-20 12:53:57,944:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:53:57,944:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:53:57,944:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:53:57,944:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:53:58,130:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:53:58,130:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:53:58,130:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:53:58,130:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:53:58,372:INFO:Initializing load_model()
2024-09-20 12:53:58,372:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 12:53:58,410:INFO:Initializing load_model()
2024-09-20 12:53:58,410:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 12:54:03,874:INFO:Initializing predict_model()
2024-09-20 12:54:03,874:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17b1d8cd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17adb6ad0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17b1d16c0>)
2024-09-20 12:54:03,875:INFO:Checking exceptions
2024-09-20 12:54:03,875:INFO:Preloading libraries
2024-09-20 12:54:03,875:INFO:Set up data.
2024-09-20 12:54:03,878:INFO:Set up index.
2024-09-20 12:54:14,980:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:54:14,980:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:54:14,980:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:54:14,981:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:54:15,041:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:54:15,041:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:54:15,041:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:54:15,042:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:54:15,247:INFO:Initializing load_model()
2024-09-20 12:54:15,247:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 12:54:15,303:INFO:Initializing load_model()
2024-09-20 12:54:15,303:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 12:54:16,843:INFO:Initializing predict_model()
2024-09-20 12:54:16,843:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x14fb9a210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x14fbb4cd0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1580656c0>)
2024-09-20 12:54:16,843:INFO:Checking exceptions
2024-09-20 12:54:16,843:INFO:Preloading libraries
2024-09-20 12:54:16,843:INFO:Set up data.
2024-09-20 12:54:16,846:INFO:Set up index.
2024-09-20 12:56:34,549:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:56:34,549:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:56:34,549:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:56:34,549:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:56:34,549:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:56:34,549:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:56:34,549:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:56:34,549:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 12:56:34,946:INFO:Initializing load_model()
2024-09-20 12:56:34,946:INFO:Initializing load_model()
2024-09-20 12:56:34,946:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 12:56:34,946:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 12:56:37,128:INFO:Initializing predict_model()
2024-09-20 12:56:37,129:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1794846d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178b4ea10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17947d6c0>)
2024-09-20 12:56:37,129:INFO:Checking exceptions
2024-09-20 12:56:37,129:INFO:Preloading libraries
2024-09-20 12:56:37,129:INFO:Set up data.
2024-09-20 12:56:37,133:INFO:Set up index.
2024-09-20 13:05:15,982:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:05:15,982:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:05:15,982:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:05:15,982:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:05:16,375:INFO:Initializing load_model()
2024-09-20 13:05:16,375:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 13:05:17,228:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:05:17,228:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:05:17,228:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:05:17,228:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:05:17,476:INFO:Initializing load_model()
2024-09-20 13:05:17,476:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 13:05:22,276:INFO:Initializing predict_model()
2024-09-20 13:05:22,277:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15806e290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x14893f790>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x158065bc0>)
2024-09-20 13:05:22,277:INFO:Checking exceptions
2024-09-20 13:05:22,277:INFO:Preloading libraries
2024-09-20 13:05:22,277:INFO:Set up data.
2024-09-20 13:05:22,281:INFO:Set up index.
2024-09-20 13:12:06,314:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:12:06,314:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:12:06,314:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:12:06,314:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:12:06,710:INFO:Initializing load_model()
2024-09-20 13:12:06,710:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 13:12:46,114:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:12:46,115:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:12:46,115:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:12:46,115:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:12:46,360:INFO:Initializing load_model()
2024-09-20 13:12:46,360:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 13:12:47,186:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:12:47,186:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:12:47,186:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:12:47,186:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:12:47,424:INFO:Initializing load_model()
2024-09-20 13:12:47,424:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 13:12:51,259:INFO:Initializing predict_model()
2024-09-20 13:12:51,260:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17b12fe50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17aa4c110>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17b125da0>)
2024-09-20 13:12:51,260:INFO:Checking exceptions
2024-09-20 13:12:51,260:INFO:Preloading libraries
2024-09-20 13:12:51,260:INFO:Set up data.
2024-09-20 13:12:51,264:INFO:Set up index.
2024-09-20 13:14:06,460:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:14:06,460:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:14:06,460:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:14:06,460:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:14:06,703:INFO:Initializing load_model()
2024-09-20 13:14:06,703:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 13:14:07,537:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:14:07,537:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:14:07,538:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:14:07,538:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:14:07,786:INFO:Initializing load_model()
2024-09-20 13:14:07,786:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 13:17:32,075:INFO:Initializing predict_model()
2024-09-20 13:17:32,075:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17a74f710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17a93f8d0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17af26160>)
2024-09-20 13:17:32,075:INFO:Checking exceptions
2024-09-20 13:17:32,075:INFO:Preloading libraries
2024-09-20 13:17:32,076:INFO:Set up data.
2024-09-20 13:17:32,079:INFO:Set up index.
2024-09-20 13:17:53,050:INFO:Initializing predict_model()
2024-09-20 13:17:53,050:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17af13dd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17a93f8d0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17af25300>)
2024-09-20 13:17:53,051:INFO:Checking exceptions
2024-09-20 13:17:53,051:INFO:Preloading libraries
2024-09-20 13:17:53,051:INFO:Set up data.
2024-09-20 13:17:53,053:INFO:Set up index.
2024-09-20 13:18:29,417:INFO:Initializing predict_model()
2024-09-20 13:18:29,417:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17af35750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17a93f8d0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17af26c00>)
2024-09-20 13:18:29,417:INFO:Checking exceptions
2024-09-20 13:18:29,417:INFO:Preloading libraries
2024-09-20 13:18:29,418:INFO:Set up data.
2024-09-20 13:18:29,420:INFO:Set up index.
2024-09-20 13:18:35,053:INFO:Initializing predict_model()
2024-09-20 13:18:35,053:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17af12ad0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17a93f8d0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17af25440>)
2024-09-20 13:18:35,053:INFO:Checking exceptions
2024-09-20 13:18:35,053:INFO:Preloading libraries
2024-09-20 13:18:35,053:INFO:Set up data.
2024-09-20 13:18:35,056:INFO:Set up index.
2024-09-20 13:20:57,007:INFO:Initializing predict_model()
2024-09-20 13:20:57,008:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17af36750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17a93f8d0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17af254e0>)
2024-09-20 13:20:57,008:INFO:Checking exceptions
2024-09-20 13:20:57,008:INFO:Preloading libraries
2024-09-20 13:20:57,009:INFO:Set up data.
2024-09-20 13:20:57,011:INFO:Set up index.
2024-09-20 13:22:31,203:INFO:Initializing predict_model()
2024-09-20 13:22:31,204:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17af128d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17a93f8d0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17af25a80>)
2024-09-20 13:22:31,204:INFO:Checking exceptions
2024-09-20 13:22:31,204:INFO:Preloading libraries
2024-09-20 13:22:31,205:INFO:Set up data.
2024-09-20 13:22:31,207:INFO:Set up index.
2024-09-20 13:22:33,387:INFO:Initializing predict_model()
2024-09-20 13:22:33,387:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17af2f6d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17a93f8d0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17af26340>)
2024-09-20 13:22:33,387:INFO:Checking exceptions
2024-09-20 13:22:33,387:INFO:Preloading libraries
2024-09-20 13:22:33,387:INFO:Set up data.
2024-09-20 13:22:33,390:INFO:Set up index.
2024-09-20 13:23:07,443:INFO:Initializing predict_model()
2024-09-20 13:23:07,444:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17af34a90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17a93f8d0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17af260c0>)
2024-09-20 13:23:07,444:INFO:Checking exceptions
2024-09-20 13:23:07,444:INFO:Preloading libraries
2024-09-20 13:23:07,444:INFO:Set up data.
2024-09-20 13:23:07,446:INFO:Set up index.
2024-09-20 13:35:52,194:INFO:Initializing predict_model()
2024-09-20 13:35:52,194:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17af3d150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17a93f8d0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17af25b20>)
2024-09-20 13:35:52,194:INFO:Checking exceptions
2024-09-20 13:35:52,194:INFO:Preloading libraries
2024-09-20 13:35:52,195:INFO:Set up data.
2024-09-20 13:35:52,198:INFO:Set up index.
2024-09-20 13:36:22,652:INFO:Initializing predict_model()
2024-09-20 13:36:22,653:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17af7dc50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17a93f8d0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17af26c00>)
2024-09-20 13:36:22,653:INFO:Checking exceptions
2024-09-20 13:36:22,653:INFO:Preloading libraries
2024-09-20 13:36:22,653:INFO:Set up data.
2024-09-20 13:36:22,655:INFO:Set up index.
2024-09-20 13:38:16,913:INFO:Initializing predict_model()
2024-09-20 13:38:16,914:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17af3cd50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17a93f8d0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17af25940>)
2024-09-20 13:38:16,914:INFO:Checking exceptions
2024-09-20 13:38:16,914:INFO:Preloading libraries
2024-09-20 13:38:16,914:INFO:Set up data.
2024-09-20 13:38:16,916:INFO:Set up index.
2024-09-20 13:39:53,564:INFO:Initializing predict_model()
2024-09-20 13:39:53,565:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17af7ed10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17a93f8d0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17af27a60>)
2024-09-20 13:39:53,565:INFO:Checking exceptions
2024-09-20 13:39:53,565:INFO:Preloading libraries
2024-09-20 13:39:53,566:INFO:Set up data.
2024-09-20 13:39:53,567:INFO:Set up index.
2024-09-20 13:40:40,284:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:40:40,284:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:40:40,284:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:40:40,284:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:40:40,674:INFO:Initializing load_model()
2024-09-20 13:40:40,674:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 13:40:41,536:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:40:41,536:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:40:41,536:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:40:41,536:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:40:41,778:INFO:Initializing load_model()
2024-09-20 13:40:41,778:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 13:40:47,862:INFO:Initializing predict_model()
2024-09-20 13:40:47,862:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17175d510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17133f910>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17171dda0>)
2024-09-20 13:40:47,862:INFO:Checking exceptions
2024-09-20 13:40:47,862:INFO:Preloading libraries
2024-09-20 13:40:47,863:INFO:Set up data.
2024-09-20 13:40:47,866:INFO:Set up index.
2024-09-20 13:41:32,355:INFO:Initializing predict_model()
2024-09-20 13:41:32,356:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x171764850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17133f910>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17171da80>)
2024-09-20 13:41:32,356:INFO:Checking exceptions
2024-09-20 13:41:32,356:INFO:Preloading libraries
2024-09-20 13:41:32,356:INFO:Set up data.
2024-09-20 13:41:32,359:INFO:Set up index.
2024-09-20 13:41:34,006:INFO:Initializing predict_model()
2024-09-20 13:41:34,006:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x171725550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17133f910>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17171d440>)
2024-09-20 13:41:34,006:INFO:Checking exceptions
2024-09-20 13:41:34,006:INFO:Preloading libraries
2024-09-20 13:41:34,006:INFO:Set up data.
2024-09-20 13:41:34,009:INFO:Set up index.
2024-09-20 13:41:56,921:INFO:Initializing predict_model()
2024-09-20 13:41:56,921:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x171757350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17133f910>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17171e160>)
2024-09-20 13:41:56,921:INFO:Checking exceptions
2024-09-20 13:41:56,921:INFO:Preloading libraries
2024-09-20 13:41:56,921:INFO:Set up data.
2024-09-20 13:41:56,924:INFO:Set up index.
2024-09-20 13:44:04,013:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:44:04,013:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:44:04,013:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:44:04,013:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:44:04,368:INFO:Initializing load_model()
2024-09-20 13:44:04,368:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 13:44:05,257:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:44:05,257:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:44:05,257:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:44:05,257:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:44:05,507:INFO:Initializing load_model()
2024-09-20 13:44:05,507:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 13:44:07,562:INFO:Initializing predict_model()
2024-09-20 13:44:07,563:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17b32db10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17ad3f890>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17b325580>)
2024-09-20 13:44:07,563:INFO:Checking exceptions
2024-09-20 13:44:07,563:INFO:Preloading libraries
2024-09-20 13:44:07,563:INFO:Set up data.
2024-09-20 13:44:07,566:INFO:Set up index.
2024-09-20 13:45:37,713:INFO:Initializing predict_model()
2024-09-20 13:45:37,714:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17b32e890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17ad3f890>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17b327380>)
2024-09-20 13:45:37,714:INFO:Checking exceptions
2024-09-20 13:45:37,714:INFO:Preloading libraries
2024-09-20 13:45:37,714:INFO:Set up data.
2024-09-20 13:45:37,717:INFO:Set up index.
2024-09-20 13:46:24,415:INFO:Initializing predict_model()
2024-09-20 13:46:24,416:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17b3603d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17ad3f890>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17b325a80>)
2024-09-20 13:46:24,416:INFO:Checking exceptions
2024-09-20 13:46:24,416:INFO:Preloading libraries
2024-09-20 13:46:24,416:INFO:Set up data.
2024-09-20 13:46:24,418:INFO:Set up index.
2024-09-20 13:47:09,651:INFO:Initializing predict_model()
2024-09-20 13:47:09,652:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17b35f6d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17ad3f890>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17b325760>)
2024-09-20 13:47:09,652:INFO:Checking exceptions
2024-09-20 13:47:09,652:INFO:Preloading libraries
2024-09-20 13:47:09,652:INFO:Set up data.
2024-09-20 13:47:09,654:INFO:Set up index.
2024-09-20 13:47:51,649:INFO:Initializing predict_model()
2024-09-20 13:47:51,651:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17b364050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17ad3f890>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17b327740>)
2024-09-20 13:47:51,651:INFO:Checking exceptions
2024-09-20 13:47:51,651:INFO:Preloading libraries
2024-09-20 13:47:51,651:INFO:Set up data.
2024-09-20 13:47:51,653:INFO:Set up index.
2024-09-20 13:48:53,654:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:48:53,654:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:48:53,654:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:48:53,654:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:48:54,010:INFO:Initializing load_model()
2024-09-20 13:48:54,010:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 13:48:54,877:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:48:54,877:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:48:54,877:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:48:54,877:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:48:55,123:INFO:Initializing load_model()
2024-09-20 13:48:55,123:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 13:49:01,696:INFO:Initializing predict_model()
2024-09-20 13:49:01,696:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x14ee60210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x14e83f850>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14ee25580>)
2024-09-20 13:49:01,696:INFO:Checking exceptions
2024-09-20 13:49:01,696:INFO:Preloading libraries
2024-09-20 13:49:01,697:INFO:Set up data.
2024-09-20 13:49:01,700:INFO:Set up index.
2024-09-20 13:49:18,382:INFO:Initializing predict_model()
2024-09-20 13:49:18,383:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x14ee6abd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x14e83f850>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14ee27380>)
2024-09-20 13:49:18,383:INFO:Checking exceptions
2024-09-20 13:49:18,383:INFO:Preloading libraries
2024-09-20 13:49:18,383:INFO:Set up data.
2024-09-20 13:49:18,385:INFO:Set up index.
2024-09-20 13:49:46,356:INFO:Initializing predict_model()
2024-09-20 13:49:46,356:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x14ee69c10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x14e83f850>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14ee25760>)
2024-09-20 13:49:46,356:INFO:Checking exceptions
2024-09-20 13:49:46,356:INFO:Preloading libraries
2024-09-20 13:49:46,356:INFO:Set up data.
2024-09-20 13:49:46,359:INFO:Set up index.
2024-09-20 13:50:13,044:INFO:Initializing predict_model()
2024-09-20 13:50:13,044:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x14ee134d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x14e83f850>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14ee27740>)
2024-09-20 13:50:13,044:INFO:Checking exceptions
2024-09-20 13:50:13,045:INFO:Preloading libraries
2024-09-20 13:50:13,045:INFO:Set up data.
2024-09-20 13:50:13,047:INFO:Set up index.
2024-09-20 13:50:16,188:INFO:Initializing predict_model()
2024-09-20 13:50:16,188:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x14ee5e990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x14e83f850>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14ee25f80>)
2024-09-20 13:50:16,188:INFO:Checking exceptions
2024-09-20 13:50:16,188:INFO:Preloading libraries
2024-09-20 13:50:16,188:INFO:Set up data.
2024-09-20 13:50:16,190:INFO:Set up index.
2024-09-20 13:50:46,716:INFO:Initializing predict_model()
2024-09-20 13:50:46,717:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x14ee62610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x14e83f850>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14ee27240>)
2024-09-20 13:50:46,717:INFO:Checking exceptions
2024-09-20 13:50:46,717:INFO:Preloading libraries
2024-09-20 13:50:46,717:INFO:Set up data.
2024-09-20 13:50:46,719:INFO:Set up index.
2024-09-20 13:52:12,013:INFO:Initializing predict_model()
2024-09-20 13:52:12,014:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x14ee86b50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x14e83f850>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14ee25c60>)
2024-09-20 13:52:12,014:INFO:Checking exceptions
2024-09-20 13:52:12,014:INFO:Preloading libraries
2024-09-20 13:52:12,014:INFO:Set up data.
2024-09-20 13:52:12,016:INFO:Set up index.
2024-09-20 13:52:52,733:INFO:Initializing predict_model()
2024-09-20 13:52:52,734:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x14ee693d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x14e83f850>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14ee27240>)
2024-09-20 13:52:52,734:INFO:Checking exceptions
2024-09-20 13:52:52,734:INFO:Preloading libraries
2024-09-20 13:52:52,734:INFO:Set up data.
2024-09-20 13:52:52,736:INFO:Set up index.
2024-09-20 13:53:26,335:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:53:26,335:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:53:26,335:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:53:26,335:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:53:26,693:INFO:Initializing load_model()
2024-09-20 13:53:26,693:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 13:53:27,535:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:53:27,535:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:53:27,535:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:53:27,535:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:53:27,782:INFO:Initializing load_model()
2024-09-20 13:53:27,782:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 13:53:31,250:INFO:Initializing predict_model()
2024-09-20 13:53:31,250:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16b79c310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x16a13f890>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16b761580>)
2024-09-20 13:53:31,250:INFO:Checking exceptions
2024-09-20 13:53:31,250:INFO:Preloading libraries
2024-09-20 13:53:31,251:INFO:Set up data.
2024-09-20 13:53:31,254:INFO:Set up index.
2024-09-20 13:54:34,219:INFO:Initializing predict_model()
2024-09-20 13:54:34,220:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16b79fc50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x16a13f890>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16b763380>)
2024-09-20 13:54:34,220:INFO:Checking exceptions
2024-09-20 13:54:34,220:INFO:Preloading libraries
2024-09-20 13:54:34,220:INFO:Set up data.
2024-09-20 13:54:34,223:INFO:Set up index.
2024-09-20 13:55:14,793:INFO:Initializing predict_model()
2024-09-20 13:55:14,794:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16b79e090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x16a13f890>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16b761a80>)
2024-09-20 13:55:14,794:INFO:Checking exceptions
2024-09-20 13:55:14,794:INFO:Preloading libraries
2024-09-20 13:55:14,794:INFO:Set up data.
2024-09-20 13:55:14,796:INFO:Set up index.
2024-09-20 13:55:16,070:INFO:Initializing predict_model()
2024-09-20 13:55:16,070:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16b7683d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x16a13f890>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16b761440>)
2024-09-20 13:55:16,070:INFO:Checking exceptions
2024-09-20 13:55:16,070:INFO:Preloading libraries
2024-09-20 13:55:16,070:INFO:Set up data.
2024-09-20 13:55:16,072:INFO:Set up index.
2024-09-20 13:55:35,350:INFO:Initializing predict_model()
2024-09-20 13:55:35,350:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16b79ddd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x16a13f890>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16b761f80>)
2024-09-20 13:55:35,350:INFO:Checking exceptions
2024-09-20 13:55:35,350:INFO:Preloading libraries
2024-09-20 13:55:35,350:INFO:Set up data.
2024-09-20 13:55:35,352:INFO:Set up index.
2024-09-20 13:55:55,287:INFO:Initializing predict_model()
2024-09-20 13:55:55,287:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16b7b8190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x16a13f890>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16b7636a0>)
2024-09-20 13:55:55,287:INFO:Checking exceptions
2024-09-20 13:55:55,287:INFO:Preloading libraries
2024-09-20 13:55:55,288:INFO:Set up data.
2024-09-20 13:55:55,290:INFO:Set up index.
2024-09-20 13:58:43,134:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:58:43,135:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:58:43,135:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:58:43,135:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 13:58:43,533:INFO:Initializing load_model()
2024-09-20 13:58:43,533:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 13:58:46,853:INFO:Initializing predict_model()
2024-09-20 13:58:46,853:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x131034710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x130a47910>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x13102d6c0>)
2024-09-20 13:58:46,853:INFO:Checking exceptions
2024-09-20 13:58:46,853:INFO:Preloading libraries
2024-09-20 13:58:46,854:INFO:Set up data.
2024-09-20 13:58:46,857:INFO:Set up index.
2024-09-20 14:06:21,172:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:06:21,173:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:06:21,173:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:06:21,173:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:06:21,567:INFO:Initializing load_model()
2024-09-20 14:06:21,567:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 14:06:22,455:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:06:22,455:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:06:22,455:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:06:22,455:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:06:22,705:INFO:Initializing load_model()
2024-09-20 14:06:22,705:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 14:07:44,946:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:07:44,946:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:07:44,946:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:07:44,946:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:07:45,303:INFO:Initializing load_model()
2024-09-20 14:07:45,303:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 14:07:46,202:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:07:46,202:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:07:46,202:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:07:46,202:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:07:46,458:INFO:Initializing load_model()
2024-09-20 14:07:46,458:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 14:08:31,406:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:08:31,406:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:08:31,406:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:08:31,406:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:08:31,824:INFO:Initializing load_model()
2024-09-20 14:08:31,824:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 14:08:34,630:INFO:Initializing predict_model()
2024-09-20 14:08:34,631:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15bbb4990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x15bb3f750>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15c2256c0>)
2024-09-20 14:08:34,631:INFO:Checking exceptions
2024-09-20 14:08:34,631:INFO:Preloading libraries
2024-09-20 14:08:34,631:INFO:Set up data.
2024-09-20 14:08:34,634:INFO:Set up index.
2024-09-20 14:08:38,312:INFO:Initializing predict_model()
2024-09-20 14:08:38,312:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15c2766d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x15bb3f750>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15c2262a0>)
2024-09-20 14:08:38,312:INFO:Checking exceptions
2024-09-20 14:08:38,312:INFO:Preloading libraries
2024-09-20 14:08:38,312:INFO:Set up data.
2024-09-20 14:08:38,315:INFO:Set up index.
2024-09-20 14:09:35,620:INFO:Initializing predict_model()
2024-09-20 14:09:35,620:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15c213b50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x15bb3f750>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15c2271a0>)
2024-09-20 14:09:35,620:INFO:Checking exceptions
2024-09-20 14:09:35,620:INFO:Preloading libraries
2024-09-20 14:09:35,620:INFO:Set up data.
2024-09-20 14:09:35,623:INFO:Set up index.
2024-09-20 14:09:57,071:INFO:Initializing predict_model()
2024-09-20 14:09:57,072:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15c212110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x15bb3f750>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15c2253a0>)
2024-09-20 14:09:57,072:INFO:Checking exceptions
2024-09-20 14:09:57,072:INFO:Preloading libraries
2024-09-20 14:09:57,072:INFO:Set up data.
2024-09-20 14:09:57,075:INFO:Set up index.
2024-09-20 14:10:01,233:INFO:Initializing predict_model()
2024-09-20 14:10:01,233:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15c2364d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x15bb3f750>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15c2251c0>)
2024-09-20 14:10:01,233:INFO:Checking exceptions
2024-09-20 14:10:01,233:INFO:Preloading libraries
2024-09-20 14:10:01,233:INFO:Set up data.
2024-09-20 14:10:01,235:INFO:Set up index.
2024-09-20 14:10:35,700:INFO:Initializing predict_model()
2024-09-20 14:10:35,701:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15c212b90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x15bb3f750>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15c2271a0>)
2024-09-20 14:10:35,701:INFO:Checking exceptions
2024-09-20 14:10:35,701:INFO:Preloading libraries
2024-09-20 14:10:35,701:INFO:Set up data.
2024-09-20 14:10:35,703:INFO:Set up index.
2024-09-20 14:11:16,076:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:11:16,076:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:11:16,076:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:11:16,076:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:11:16,405:INFO:Initializing load_model()
2024-09-20 14:11:16,405:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 14:11:17,301:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:11:17,301:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:11:17,301:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:11:17,301:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:11:17,553:INFO:Initializing load_model()
2024-09-20 14:11:17,553:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 14:12:30,347:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:12:30,347:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:12:30,347:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:12:30,347:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:12:30,619:INFO:Initializing load_model()
2024-09-20 14:12:30,619:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 14:12:31,450:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:12:31,450:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:12:31,450:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:12:31,450:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:12:31,717:INFO:Initializing load_model()
2024-09-20 14:12:31,717:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 14:18:48,867:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:18:48,867:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:18:48,868:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:18:48,868:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:18:49,272:INFO:Initializing load_model()
2024-09-20 14:18:49,272:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 14:18:50,207:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:18:50,207:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:18:50,207:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:18:50,207:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:18:50,452:INFO:Initializing load_model()
2024-09-20 14:18:50,452:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 14:22:54,473:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:22:54,474:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:22:54,474:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:22:54,474:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:22:54,884:INFO:Initializing load_model()
2024-09-20 14:22:54,884:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 14:22:55,829:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:22:55,829:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:22:55,829:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:22:55,829:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:22:56,089:INFO:Initializing load_model()
2024-09-20 14:22:56,089:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 14:22:59,070:INFO:Initializing predict_model()
2024-09-20 14:22:59,071:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17f159bd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17c43f850>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f145bc0>)
2024-09-20 14:22:59,071:INFO:Checking exceptions
2024-09-20 14:22:59,071:INFO:Preloading libraries
2024-09-20 14:22:59,073:INFO:Set up data.
2024-09-20 14:22:59,078:INFO:Set up index.
2024-09-20 14:23:49,935:INFO:Initializing predict_model()
2024-09-20 14:23:49,935:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17f13f390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17c43f850>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f147560>)
2024-09-20 14:23:49,935:INFO:Checking exceptions
2024-09-20 14:23:49,935:INFO:Preloading libraries
2024-09-20 14:23:49,935:INFO:Set up data.
2024-09-20 14:23:49,937:INFO:Set up index.
2024-09-20 14:25:17,352:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:25:17,352:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:25:17,352:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:25:17,352:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:25:17,780:INFO:Initializing load_model()
2024-09-20 14:25:17,780:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 14:25:18,807:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:25:18,807:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:25:18,807:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:25:18,807:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 14:25:19,070:INFO:Initializing load_model()
2024-09-20 14:25:19,070:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 14:25:23,777:INFO:Initializing predict_model()
2024-09-20 14:25:23,777:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x14eb60a50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x14e59cb50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14eb19bc0>)
2024-09-20 14:25:23,777:INFO:Checking exceptions
2024-09-20 14:25:23,778:INFO:Preloading libraries
2024-09-20 14:25:23,778:INFO:Set up data.
2024-09-20 14:25:23,781:INFO:Set up index.
2024-09-20 14:25:25,860:INFO:Initializing predict_model()
2024-09-20 14:25:25,860:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x14eb11bd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x14e59cb50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14eb19c60>)
2024-09-20 14:25:25,860:INFO:Checking exceptions
2024-09-20 14:25:25,860:INFO:Preloading libraries
2024-09-20 14:25:25,861:INFO:Set up data.
2024-09-20 14:25:25,864:INFO:Set up index.
2024-09-20 18:49:25,747:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 18:49:25,747:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 18:49:25,747:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 18:49:25,747:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 18:49:26,318:INFO:Initializing load_model()
2024-09-20 18:49:26,318:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 18:49:28,179:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 18:49:28,179:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 18:49:28,179:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 18:49:28,180:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 18:49:28,434:INFO:Initializing load_model()
2024-09-20 18:49:28,434:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 18:49:36,267:INFO:Initializing predict_model()
2024-09-20 18:49:36,267:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17f301b90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17c83fc10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f2ba020>)
2024-09-20 18:49:36,268:INFO:Checking exceptions
2024-09-20 18:49:36,268:INFO:Preloading libraries
2024-09-20 18:49:36,268:INFO:Set up data.
2024-09-20 18:49:36,270:INFO:Set up index.
2024-09-20 18:49:49,020:INFO:Initializing predict_model()
2024-09-20 18:49:49,020:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17f30f950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17c83fc10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f2b9da0>)
2024-09-20 18:49:49,020:INFO:Checking exceptions
2024-09-20 18:49:49,020:INFO:Preloading libraries
2024-09-20 18:49:49,020:INFO:Set up data.
2024-09-20 18:49:49,022:INFO:Set up index.
2024-09-20 18:52:46,170:INFO:Initializing predict_model()
2024-09-20 18:52:46,171:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17f301010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17c83fc10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f2b9800>)
2024-09-20 18:52:46,171:INFO:Checking exceptions
2024-09-20 18:52:46,171:INFO:Preloading libraries
2024-09-20 18:52:46,172:INFO:Set up data.
2024-09-20 18:52:46,174:INFO:Set up index.
2024-09-20 18:54:58,102:INFO:Initializing predict_model()
2024-09-20 18:54:58,102:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17f30dfd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17c83fc10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f2bb920>)
2024-09-20 18:54:58,102:INFO:Checking exceptions
2024-09-20 18:54:58,102:INFO:Preloading libraries
2024-09-20 18:54:58,103:INFO:Set up data.
2024-09-20 18:54:58,105:INFO:Set up index.
2024-09-20 18:55:02,567:INFO:Initializing predict_model()
2024-09-20 18:55:02,568:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17f312490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17c83fc10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f2baca0>)
2024-09-20 18:55:02,568:INFO:Checking exceptions
2024-09-20 18:55:02,568:INFO:Preloading libraries
2024-09-20 18:55:02,568:INFO:Set up data.
2024-09-20 18:55:02,570:INFO:Set up index.
2024-09-20 18:55:54,609:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 18:55:54,609:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 18:55:54,609:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 18:55:54,609:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 18:55:54,970:INFO:Initializing load_model()
2024-09-20 18:55:54,970:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 18:55:57,026:INFO:Initializing predict_model()
2024-09-20 18:55:57,027:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x170fb5290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x170f3fc90>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1714bd760>)
2024-09-20 18:55:57,027:INFO:Checking exceptions
2024-09-20 18:55:57,027:INFO:Preloading libraries
2024-09-20 18:55:57,027:INFO:Set up data.
2024-09-20 18:55:57,030:INFO:Set up index.
2024-09-20 18:56:02,182:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 18:56:02,182:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 18:56:02,182:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 18:56:02,182:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 18:56:02,433:INFO:Initializing load_model()
2024-09-20 18:56:02,434:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 18:56:41,193:INFO:Initializing predict_model()
2024-09-20 18:56:41,194:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1792b69d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17923fbd0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17bf098a0>)
2024-09-20 18:56:41,194:INFO:Checking exceptions
2024-09-20 18:56:41,194:INFO:Preloading libraries
2024-09-20 18:56:41,194:INFO:Set up data.
2024-09-20 18:56:41,197:INFO:Set up index.
2024-09-20 19:04:37,659:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:04:37,659:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:04:37,659:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:04:37,659:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:04:38,051:INFO:Initializing load_model()
2024-09-20 19:04:38,051:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:04:38,916:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:04:38,916:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:04:38,916:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:04:38,916:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:04:39,155:INFO:Initializing load_model()
2024-09-20 19:04:39,155:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:04:45,959:INFO:Initializing predict_model()
2024-09-20 19:04:45,959:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17c73d0d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17c7b4490>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17eb99b20>)
2024-09-20 19:04:45,959:INFO:Checking exceptions
2024-09-20 19:04:45,959:INFO:Preloading libraries
2024-09-20 19:04:45,960:INFO:Set up data.
2024-09-20 19:04:45,963:INFO:Set up index.
2024-09-20 19:04:47,339:INFO:Initializing predict_model()
2024-09-20 19:04:47,339:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17ebeead0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17c7b4490>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17eb9b4c0>)
2024-09-20 19:04:47,339:INFO:Checking exceptions
2024-09-20 19:04:47,339:INFO:Preloading libraries
2024-09-20 19:04:47,340:INFO:Set up data.
2024-09-20 19:04:47,342:INFO:Set up index.
2024-09-20 19:05:03,668:INFO:Initializing predict_model()
2024-09-20 19:05:03,668:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17eb93690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17c7b4490>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17eb99800>)
2024-09-20 19:05:03,668:INFO:Checking exceptions
2024-09-20 19:05:03,668:INFO:Preloading libraries
2024-09-20 19:05:03,668:INFO:Set up data.
2024-09-20 19:05:03,670:INFO:Set up index.
2024-09-20 19:05:32,846:INFO:Initializing predict_model()
2024-09-20 19:05:32,846:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17ebfa790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17c7b4490>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17eb999e0>)
2024-09-20 19:05:32,846:INFO:Checking exceptions
2024-09-20 19:05:32,846:INFO:Preloading libraries
2024-09-20 19:05:32,846:INFO:Set up data.
2024-09-20 19:05:32,848:INFO:Set up index.
2024-09-20 19:06:11,617:INFO:Initializing predict_model()
2024-09-20 19:06:11,617:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17ebec850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17c7b4490>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17eb99260>)
2024-09-20 19:06:11,617:INFO:Checking exceptions
2024-09-20 19:06:11,617:INFO:Preloading libraries
2024-09-20 19:06:11,617:INFO:Set up data.
2024-09-20 19:06:11,619:INFO:Set up index.
2024-09-20 19:06:14,900:INFO:Initializing predict_model()
2024-09-20 19:06:14,900:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17ebef650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17c7b4490>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17eb99bc0>)
2024-09-20 19:06:14,900:INFO:Checking exceptions
2024-09-20 19:06:14,900:INFO:Preloading libraries
2024-09-20 19:06:14,900:INFO:Set up data.
2024-09-20 19:06:14,902:INFO:Set up index.
2024-09-20 19:06:18,380:INFO:Initializing predict_model()
2024-09-20 19:06:18,380:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17ebec410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17c7b4490>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17eb99da0>)
2024-09-20 19:06:18,380:INFO:Checking exceptions
2024-09-20 19:06:18,381:INFO:Preloading libraries
2024-09-20 19:06:18,381:INFO:Set up data.
2024-09-20 19:06:18,383:INFO:Set up index.
2024-09-20 19:09:23,697:INFO:Initializing predict_model()
2024-09-20 19:09:23,697:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17eb924d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17c7b4490>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17eb994e0>)
2024-09-20 19:09:23,697:INFO:Checking exceptions
2024-09-20 19:09:23,697:INFO:Preloading libraries
2024-09-20 19:09:23,697:INFO:Set up data.
2024-09-20 19:09:23,698:INFO:Set up index.
2024-09-20 19:10:48,356:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:10:48,356:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:10:48,356:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:10:48,356:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:10:48,745:INFO:Initializing load_model()
2024-09-20 19:10:48,745:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:11:41,752:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:11:41,752:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:11:41,752:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:11:41,752:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:11:42,113:INFO:Initializing load_model()
2024-09-20 19:11:42,113:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:12:39,106:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:12:39,107:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:12:39,107:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:12:39,107:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:12:39,473:INFO:Initializing load_model()
2024-09-20 19:12:39,473:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:13:07,905:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:13:07,905:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:13:07,905:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:13:07,905:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:13:08,156:INFO:Initializing load_model()
2024-09-20 19:13:08,156:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:13:34,575:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:13:34,576:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:13:34,576:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:13:34,576:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:13:34,831:INFO:Initializing load_model()
2024-09-20 19:13:34,831:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:16:51,338:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:16:51,338:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:16:51,339:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:16:51,339:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:16:51,592:INFO:Initializing load_model()
2024-09-20 19:16:51,592:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:16:59,756:INFO:Initializing predict_model()
2024-09-20 19:16:59,756:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x14fbb6490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x14fb3fb50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16e2c58a0>)
2024-09-20 19:16:59,756:INFO:Checking exceptions
2024-09-20 19:16:59,756:INFO:Preloading libraries
2024-09-20 19:16:59,757:INFO:Set up data.
2024-09-20 19:16:59,760:INFO:Set up index.
2024-09-20 19:17:01,669:INFO:Initializing predict_model()
2024-09-20 19:17:01,670:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16e2ef850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x14fb3fb50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16e2c7420>)
2024-09-20 19:17:01,670:INFO:Checking exceptions
2024-09-20 19:17:01,670:INFO:Preloading libraries
2024-09-20 19:17:01,670:INFO:Set up data.
2024-09-20 19:17:01,672:INFO:Set up index.
2024-09-20 19:18:41,696:INFO:Initializing predict_model()
2024-09-20 19:18:41,696:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16e31edd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x14fb3fb50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16e2c6200>)
2024-09-20 19:18:41,696:INFO:Checking exceptions
2024-09-20 19:18:41,697:INFO:Preloading libraries
2024-09-20 19:18:41,697:INFO:Set up data.
2024-09-20 19:18:41,699:INFO:Set up index.
2024-09-20 19:18:43,852:INFO:Initializing predict_model()
2024-09-20 19:18:43,852:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16e2e29d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x14fb3fb50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16e2c7060>)
2024-09-20 19:18:43,852:INFO:Checking exceptions
2024-09-20 19:18:43,852:INFO:Preloading libraries
2024-09-20 19:18:43,852:INFO:Set up data.
2024-09-20 19:18:43,855:INFO:Set up index.
2024-09-20 19:18:45,157:INFO:Initializing predict_model()
2024-09-20 19:18:45,157:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16e2be9d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x14fb3fb50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16e2c74c0>)
2024-09-20 19:18:45,157:INFO:Checking exceptions
2024-09-20 19:18:45,157:INFO:Preloading libraries
2024-09-20 19:18:45,157:INFO:Set up data.
2024-09-20 19:18:45,158:INFO:Set up index.
2024-09-20 19:18:47,150:INFO:Initializing predict_model()
2024-09-20 19:18:47,150:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16e2e2c50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x14fb3fb50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16e2c72e0>)
2024-09-20 19:18:47,150:INFO:Checking exceptions
2024-09-20 19:18:47,150:INFO:Preloading libraries
2024-09-20 19:18:47,150:INFO:Set up data.
2024-09-20 19:18:47,152:INFO:Set up index.
2024-09-20 19:18:57,272:INFO:Initializing predict_model()
2024-09-20 19:18:57,272:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16e322390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x14fb3fb50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16e2c54e0>)
2024-09-20 19:18:57,272:INFO:Checking exceptions
2024-09-20 19:18:57,272:INFO:Preloading libraries
2024-09-20 19:18:57,272:INFO:Set up data.
2024-09-20 19:18:57,274:INFO:Set up index.
2024-09-20 19:20:30,856:INFO:Initializing predict_model()
2024-09-20 19:20:30,856:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16e2e2c50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x14fb3fb50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16e2c7060>)
2024-09-20 19:20:30,856:INFO:Checking exceptions
2024-09-20 19:20:30,856:INFO:Preloading libraries
2024-09-20 19:20:30,856:INFO:Set up data.
2024-09-20 19:20:30,858:INFO:Set up index.
2024-09-20 19:20:33,081:INFO:Initializing predict_model()
2024-09-20 19:20:33,081:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16e31f6d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x14fb3fb50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16e2c7ce0>)
2024-09-20 19:20:33,081:INFO:Checking exceptions
2024-09-20 19:20:33,081:INFO:Preloading libraries
2024-09-20 19:20:33,082:INFO:Set up data.
2024-09-20 19:20:33,084:INFO:Set up index.
2024-09-20 19:21:00,528:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:21:00,528:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:21:00,528:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:21:00,528:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:21:00,776:INFO:Initializing load_model()
2024-09-20 19:21:00,776:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:21:01,644:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:21:01,644:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:21:01,644:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:21:01,644:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:21:01,885:INFO:Initializing load_model()
2024-09-20 19:21:01,885:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:21:08,152:INFO:Initializing predict_model()
2024-09-20 19:21:08,152:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x168eaaa10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x168e3fd50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16c0ba660>)
2024-09-20 19:21:08,152:INFO:Checking exceptions
2024-09-20 19:21:08,152:INFO:Preloading libraries
2024-09-20 19:21:08,153:INFO:Set up data.
2024-09-20 19:21:08,156:INFO:Set up index.
2024-09-20 19:21:39,445:INFO:Initializing predict_model()
2024-09-20 19:21:39,446:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16c0fda50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x168e3fd50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16c0b94e0>)
2024-09-20 19:21:39,446:INFO:Checking exceptions
2024-09-20 19:21:39,446:INFO:Preloading libraries
2024-09-20 19:21:39,447:INFO:Set up data.
2024-09-20 19:21:39,450:INFO:Set up index.
2024-09-20 19:22:33,396:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:22:33,396:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:22:33,396:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:22:33,396:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:22:33,680:INFO:Initializing load_model()
2024-09-20 19:22:33,680:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:22:51,961:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:22:51,961:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:22:51,961:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:22:51,961:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:22:52,240:INFO:Initializing load_model()
2024-09-20 19:22:52,240:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:23:40,312:INFO:Initializing predict_model()
2024-09-20 19:23:40,313:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15b568b50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x15a43fd50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15b51a480>)
2024-09-20 19:23:40,313:INFO:Checking exceptions
2024-09-20 19:23:40,313:INFO:Preloading libraries
2024-09-20 19:23:40,313:INFO:Set up data.
2024-09-20 19:23:40,317:INFO:Set up index.
2024-09-20 19:23:58,049:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:23:58,050:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:23:58,050:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:23:58,050:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:23:58,305:INFO:Initializing load_model()
2024-09-20 19:23:58,305:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:24:01,099:INFO:Initializing predict_model()
2024-09-20 19:24:01,099:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17da64d10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17a63fa10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17da51760>)
2024-09-20 19:24:01,099:INFO:Checking exceptions
2024-09-20 19:24:01,099:INFO:Preloading libraries
2024-09-20 19:24:01,100:INFO:Set up data.
2024-09-20 19:24:01,104:INFO:Set up index.
2024-09-20 19:24:44,080:INFO:Initializing predict_model()
2024-09-20 19:24:44,081:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17da6f4d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17a63fa10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17da53240>)
2024-09-20 19:24:44,081:INFO:Checking exceptions
2024-09-20 19:24:44,081:INFO:Preloading libraries
2024-09-20 19:24:44,081:INFO:Set up data.
2024-09-20 19:24:44,083:INFO:Set up index.
2024-09-20 19:25:26,283:INFO:Initializing predict_model()
2024-09-20 19:25:26,283:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17da4a810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17a63fa10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17da53380>)
2024-09-20 19:25:26,283:INFO:Checking exceptions
2024-09-20 19:25:26,283:INFO:Preloading libraries
2024-09-20 19:25:26,283:INFO:Set up data.
2024-09-20 19:25:26,285:INFO:Set up index.
2024-09-20 19:25:57,934:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:25:57,934:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:25:57,934:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:25:57,934:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:25:58,190:INFO:Initializing load_model()
2024-09-20 19:25:58,190:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:26:35,747:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:26:35,747:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:26:35,747:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:26:35,747:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:26:35,999:INFO:Initializing load_model()
2024-09-20 19:26:35,999:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:29:40,985:INFO:Initializing predict_model()
2024-09-20 19:29:40,985:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16f021410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x16cb3f8d0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f011760>)
2024-09-20 19:29:40,985:INFO:Checking exceptions
2024-09-20 19:29:40,985:INFO:Preloading libraries
2024-09-20 19:29:40,986:INFO:Set up data.
2024-09-20 19:29:40,988:INFO:Set up index.
2024-09-20 19:30:19,397:INFO:Initializing predict_model()
2024-09-20 19:30:19,397:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16f06bc90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x16cb3f8d0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f013240>)
2024-09-20 19:30:19,398:INFO:Checking exceptions
2024-09-20 19:30:19,398:INFO:Preloading libraries
2024-09-20 19:30:19,398:INFO:Set up data.
2024-09-20 19:30:19,400:INFO:Set up index.
2024-09-20 19:30:22,387:INFO:Initializing predict_model()
2024-09-20 19:30:22,387:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16f06b350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x16cb3f8d0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f011580>)
2024-09-20 19:30:22,387:INFO:Checking exceptions
2024-09-20 19:30:22,387:INFO:Preloading libraries
2024-09-20 19:30:22,387:INFO:Set up data.
2024-09-20 19:30:22,389:INFO:Set up index.
2024-09-20 19:30:51,571:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:30:51,571:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:30:51,571:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:30:51,571:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:30:51,952:INFO:Initializing load_model()
2024-09-20 19:30:51,952:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:30:59,085:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:30:59,085:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:30:59,085:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:30:59,085:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:30:59,337:INFO:Initializing load_model()
2024-09-20 19:30:59,337:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:31:02,213:INFO:Initializing predict_model()
2024-09-20 19:31:02,213:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16296c990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x16193fad0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x162959760>)
2024-09-20 19:31:02,213:INFO:Checking exceptions
2024-09-20 19:31:02,213:INFO:Preloading libraries
2024-09-20 19:31:02,214:INFO:Set up data.
2024-09-20 19:31:02,217:INFO:Set up index.
2024-09-20 19:31:05,147:INFO:Initializing predict_model()
2024-09-20 19:31:05,147:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1629ae8d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x16193fad0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16295b420>)
2024-09-20 19:31:05,147:INFO:Checking exceptions
2024-09-20 19:31:05,147:INFO:Preloading libraries
2024-09-20 19:31:05,148:INFO:Set up data.
2024-09-20 19:31:05,150:INFO:Set up index.
2024-09-20 19:32:11,229:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:32:11,229:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:32:11,229:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:32:11,229:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:32:11,487:INFO:Initializing load_model()
2024-09-20 19:32:11,487:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:32:31,740:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:32:31,740:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:32:31,740:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:32:31,740:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:32:31,992:INFO:Initializing load_model()
2024-09-20 19:32:31,992:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:32:38,129:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:32:38,129:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:32:38,129:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:32:38,129:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:32:38,376:INFO:Initializing load_model()
2024-09-20 19:32:38,376:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:32:40,775:INFO:Initializing predict_model()
2024-09-20 19:32:40,776:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1793299d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178d3fa10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x179319800>)
2024-09-20 19:32:40,776:INFO:Checking exceptions
2024-09-20 19:32:40,776:INFO:Preloading libraries
2024-09-20 19:32:40,776:INFO:Set up data.
2024-09-20 19:32:40,779:INFO:Set up index.
2024-09-20 19:32:41,640:INFO:Initializing predict_model()
2024-09-20 19:32:41,640:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x179337c90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178d3fa10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17931a660>)
2024-09-20 19:32:41,640:INFO:Checking exceptions
2024-09-20 19:32:41,640:INFO:Preloading libraries
2024-09-20 19:32:41,641:INFO:Set up data.
2024-09-20 19:32:41,643:INFO:Set up index.
2024-09-20 19:32:41,837:INFO:Initializing predict_model()
2024-09-20 19:32:41,837:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1793127d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178d3fa10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1793198a0>)
2024-09-20 19:32:41,837:INFO:Checking exceptions
2024-09-20 19:32:41,837:INFO:Preloading libraries
2024-09-20 19:32:41,837:INFO:Set up data.
2024-09-20 19:32:41,838:INFO:Set up index.
2024-09-20 19:32:42,100:INFO:Initializing predict_model()
2024-09-20 19:32:42,100:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17932ac90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178d3fa10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17931aac0>)
2024-09-20 19:32:42,100:INFO:Checking exceptions
2024-09-20 19:32:42,100:INFO:Preloading libraries
2024-09-20 19:32:42,100:INFO:Set up data.
2024-09-20 19:32:42,102:INFO:Set up index.
2024-09-20 19:33:39,250:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:33:39,250:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:33:39,250:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:33:39,250:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:33:39,516:INFO:Initializing load_model()
2024-09-20 19:33:39,516:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:33:49,674:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:33:49,674:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:33:49,674:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:33:49,674:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:33:49,932:INFO:Initializing load_model()
2024-09-20 19:33:49,932:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:33:53,730:INFO:Initializing predict_model()
2024-09-20 19:33:53,730:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17a1f2010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x179c3fad0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17a219760>)
2024-09-20 19:33:53,730:INFO:Checking exceptions
2024-09-20 19:33:53,730:INFO:Preloading libraries
2024-09-20 19:33:53,731:INFO:Set up data.
2024-09-20 19:33:53,734:INFO:Set up index.
2024-09-20 19:33:57,901:INFO:Initializing predict_model()
2024-09-20 19:33:57,901:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17a273110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x179c3fad0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17a21b420>)
2024-09-20 19:33:57,901:INFO:Checking exceptions
2024-09-20 19:33:57,901:INFO:Preloading libraries
2024-09-20 19:33:57,902:INFO:Set up data.
2024-09-20 19:33:57,904:INFO:Set up index.
2024-09-20 19:34:35,850:INFO:Initializing predict_model()
2024-09-20 19:34:35,850:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17a272810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x179c3fad0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17a21a200>)
2024-09-20 19:34:35,850:INFO:Checking exceptions
2024-09-20 19:34:35,850:INFO:Preloading libraries
2024-09-20 19:34:35,850:INFO:Set up data.
2024-09-20 19:34:35,852:INFO:Set up index.
2024-09-20 19:35:06,883:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:35:06,883:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:35:06,883:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:35:06,883:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:35:07,140:INFO:Initializing load_model()
2024-09-20 19:35:07,140:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:35:09,294:INFO:Initializing predict_model()
2024-09-20 19:35:09,294:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17c6deed0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17c8b4cd0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17ed71800>)
2024-09-20 19:35:09,294:INFO:Checking exceptions
2024-09-20 19:35:09,294:INFO:Preloading libraries
2024-09-20 19:35:09,295:INFO:Set up data.
2024-09-20 19:35:09,297:INFO:Set up index.
2024-09-20 19:36:11,900:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:36:11,900:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:36:11,900:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:36:11,900:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:36:12,162:INFO:Initializing load_model()
2024-09-20 19:36:12,162:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:36:18,287:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:36:18,287:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:36:18,287:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:36:18,287:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:36:18,544:INFO:Initializing load_model()
2024-09-20 19:36:18,544:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:36:22,672:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:36:22,672:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:36:22,672:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:36:22,672:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:36:22,921:INFO:Initializing load_model()
2024-09-20 19:36:22,921:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:36:29,447:INFO:Initializing predict_model()
2024-09-20 19:36:29,448:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178af1c50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17853f950>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x178b19800>)
2024-09-20 19:36:29,448:INFO:Checking exceptions
2024-09-20 19:36:29,448:INFO:Preloading libraries
2024-09-20 19:36:29,448:INFO:Set up data.
2024-09-20 19:36:29,451:INFO:Set up index.
2024-09-20 19:36:32,071:INFO:Initializing predict_model()
2024-09-20 19:36:32,071:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178b36790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17853f950>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x178b1a660>)
2024-09-20 19:36:32,071:INFO:Checking exceptions
2024-09-20 19:36:32,071:INFO:Preloading libraries
2024-09-20 19:36:32,071:INFO:Set up data.
2024-09-20 19:36:32,074:INFO:Set up index.
2024-09-20 19:36:35,422:INFO:Initializing predict_model()
2024-09-20 19:36:35,422:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178b34450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17853f950>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x178b198a0>)
2024-09-20 19:36:35,422:INFO:Checking exceptions
2024-09-20 19:36:35,422:INFO:Preloading libraries
2024-09-20 19:36:35,422:INFO:Set up data.
2024-09-20 19:36:35,424:INFO:Set up index.
2024-09-20 19:36:36,325:INFO:Initializing predict_model()
2024-09-20 19:36:36,326:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178b12ad0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17853f950>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x178b1aac0>)
2024-09-20 19:36:36,326:INFO:Checking exceptions
2024-09-20 19:36:36,326:INFO:Preloading libraries
2024-09-20 19:36:36,326:INFO:Set up data.
2024-09-20 19:36:36,328:INFO:Set up index.
2024-09-20 19:37:10,605:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:37:10,605:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:37:10,605:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:37:10,605:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:37:10,878:INFO:Initializing load_model()
2024-09-20 19:37:10,878:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:37:13,781:INFO:Initializing predict_model()
2024-09-20 19:37:13,781:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x158b00c50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x14de3fad0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x158af1800>)
2024-09-20 19:37:13,781:INFO:Checking exceptions
2024-09-20 19:37:13,781:INFO:Preloading libraries
2024-09-20 19:37:13,782:INFO:Set up data.
2024-09-20 19:37:13,785:INFO:Set up index.
2024-09-20 19:37:27,496:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:37:27,496:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:37:27,496:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:37:27,496:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:37:27,737:INFO:Initializing load_model()
2024-09-20 19:37:27,737:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:37:28,571:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:37:28,571:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:37:28,571:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:37:28,571:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:37:28,813:INFO:Initializing load_model()
2024-09-20 19:37:28,813:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:37:31,786:INFO:Initializing predict_model()
2024-09-20 19:37:31,786:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1791251d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x179111760>)
2024-09-20 19:37:31,786:INFO:Checking exceptions
2024-09-20 19:37:31,786:INFO:Preloading libraries
2024-09-20 19:37:31,787:INFO:Set up data.
2024-09-20 19:37:31,789:INFO:Set up index.
2024-09-20 19:37:36,368:INFO:Initializing predict_model()
2024-09-20 19:37:36,368:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x179167210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x179113420>)
2024-09-20 19:37:36,369:INFO:Checking exceptions
2024-09-20 19:37:36,369:INFO:Preloading libraries
2024-09-20 19:37:36,369:INFO:Set up data.
2024-09-20 19:37:36,371:INFO:Set up index.
2024-09-20 19:37:37,567:INFO:Initializing predict_model()
2024-09-20 19:37:37,567:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17910bcd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x179112200>)
2024-09-20 19:37:37,567:INFO:Checking exceptions
2024-09-20 19:37:37,567:INFO:Preloading libraries
2024-09-20 19:37:37,567:INFO:Set up data.
2024-09-20 19:37:37,569:INFO:Set up index.
2024-09-20 19:38:49,838:INFO:Initializing predict_model()
2024-09-20 19:38:49,838:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x179126e90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x179113380>)
2024-09-20 19:38:49,838:INFO:Checking exceptions
2024-09-20 19:38:49,838:INFO:Preloading libraries
2024-09-20 19:38:49,839:INFO:Set up data.
2024-09-20 19:38:49,841:INFO:Set up index.
2024-09-20 19:39:33,441:INFO:Initializing predict_model()
2024-09-20 19:39:33,441:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1791276d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1791137e0>)
2024-09-20 19:39:33,442:INFO:Checking exceptions
2024-09-20 19:39:33,442:INFO:Preloading libraries
2024-09-20 19:39:33,442:INFO:Set up data.
2024-09-20 19:39:33,444:INFO:Set up index.
2024-09-20 19:40:03,779:INFO:Initializing predict_model()
2024-09-20 19:40:03,780:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x179169790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1791131a0>)
2024-09-20 19:40:03,780:INFO:Checking exceptions
2024-09-20 19:40:03,780:INFO:Preloading libraries
2024-09-20 19:40:03,780:INFO:Set up data.
2024-09-20 19:40:03,782:INFO:Set up index.
2024-09-20 19:40:05,316:INFO:Initializing predict_model()
2024-09-20 19:40:05,316:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17916b450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x179113380>)
2024-09-20 19:40:05,316:INFO:Checking exceptions
2024-09-20 19:40:05,316:INFO:Preloading libraries
2024-09-20 19:40:05,316:INFO:Set up data.
2024-09-20 19:40:05,318:INFO:Set up index.
2024-09-20 19:40:52,929:INFO:Initializing predict_model()
2024-09-20 19:40:52,929:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17912da10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x179112e80>)
2024-09-20 19:40:52,929:INFO:Checking exceptions
2024-09-20 19:40:52,929:INFO:Preloading libraries
2024-09-20 19:40:52,930:INFO:Set up data.
2024-09-20 19:40:52,933:INFO:Set up index.
2024-09-20 19:40:54,266:INFO:Initializing predict_model()
2024-09-20 19:40:54,267:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17916a750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x179113100>)
2024-09-20 19:40:54,267:INFO:Checking exceptions
2024-09-20 19:40:54,267:INFO:Preloading libraries
2024-09-20 19:40:54,267:INFO:Set up data.
2024-09-20 19:40:54,269:INFO:Set up index.
2024-09-20 19:41:14,324:INFO:Initializing predict_model()
2024-09-20 19:41:14,324:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17910b950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x179111800>)
2024-09-20 19:41:14,324:INFO:Checking exceptions
2024-09-20 19:41:14,324:INFO:Preloading libraries
2024-09-20 19:41:14,324:INFO:Set up data.
2024-09-20 19:41:14,326:INFO:Set up index.
2024-09-20 19:41:15,715:INFO:Initializing predict_model()
2024-09-20 19:41:15,715:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1791690d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x179113d80>)
2024-09-20 19:41:15,715:INFO:Checking exceptions
2024-09-20 19:41:15,715:INFO:Preloading libraries
2024-09-20 19:41:15,716:INFO:Set up data.
2024-09-20 19:41:15,718:INFO:Set up index.
2024-09-20 19:41:27,291:INFO:Initializing predict_model()
2024-09-20 19:41:27,291:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x179126510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x179113600>)
2024-09-20 19:41:27,291:INFO:Checking exceptions
2024-09-20 19:41:27,291:INFO:Preloading libraries
2024-09-20 19:41:27,291:INFO:Set up data.
2024-09-20 19:41:27,293:INFO:Set up index.
2024-09-20 19:41:28,417:INFO:Initializing predict_model()
2024-09-20 19:41:28,418:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17910a750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x179113060>)
2024-09-20 19:41:28,418:INFO:Checking exceptions
2024-09-20 19:41:28,418:INFO:Preloading libraries
2024-09-20 19:41:28,418:INFO:Set up data.
2024-09-20 19:41:28,420:INFO:Set up index.
2024-09-20 19:42:53,774:INFO:Initializing predict_model()
2024-09-20 19:42:53,774:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17916aa90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x179111760>)
2024-09-20 19:42:53,774:INFO:Checking exceptions
2024-09-20 19:42:53,774:INFO:Preloading libraries
2024-09-20 19:42:53,774:INFO:Set up data.
2024-09-20 19:42:53,776:INFO:Set up index.
2024-09-20 19:42:55,364:INFO:Initializing predict_model()
2024-09-20 19:42:55,365:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1791654d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x179113380>)
2024-09-20 19:42:55,365:INFO:Checking exceptions
2024-09-20 19:42:55,365:INFO:Preloading libraries
2024-09-20 19:42:55,365:INFO:Set up data.
2024-09-20 19:42:55,367:INFO:Set up index.
2024-09-20 19:43:05,314:INFO:Initializing predict_model()
2024-09-20 19:43:05,314:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17916ad50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1791118a0>)
2024-09-20 19:43:05,315:INFO:Checking exceptions
2024-09-20 19:43:05,315:INFO:Preloading libraries
2024-09-20 19:43:05,315:INFO:Set up data.
2024-09-20 19:43:05,317:INFO:Set up index.
2024-09-20 19:43:06,890:INFO:Initializing predict_model()
2024-09-20 19:43:06,890:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17916b550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x179111580>)
2024-09-20 19:43:06,890:INFO:Checking exceptions
2024-09-20 19:43:06,890:INFO:Preloading libraries
2024-09-20 19:43:06,891:INFO:Set up data.
2024-09-20 19:43:06,893:INFO:Set up index.
2024-09-20 19:43:08,063:INFO:Initializing predict_model()
2024-09-20 19:43:08,063:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17910bb90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x179113ba0>)
2024-09-20 19:43:08,063:INFO:Checking exceptions
2024-09-20 19:43:08,063:INFO:Preloading libraries
2024-09-20 19:43:08,063:INFO:Set up data.
2024-09-20 19:43:08,065:INFO:Set up index.
2024-09-20 19:43:30,231:INFO:Initializing predict_model()
2024-09-20 19:43:30,232:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x179168250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x179113b00>)
2024-09-20 19:43:30,232:INFO:Checking exceptions
2024-09-20 19:43:30,232:INFO:Preloading libraries
2024-09-20 19:43:30,232:INFO:Set up data.
2024-09-20 19:43:30,234:INFO:Set up index.
2024-09-20 19:43:45,249:INFO:Initializing predict_model()
2024-09-20 19:43:45,249:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17912c590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x179113560>)
2024-09-20 19:43:45,249:INFO:Checking exceptions
2024-09-20 19:43:45,249:INFO:Preloading libraries
2024-09-20 19:43:45,249:INFO:Set up data.
2024-09-20 19:43:45,251:INFO:Set up index.
2024-09-20 19:43:46,335:INFO:Initializing predict_model()
2024-09-20 19:43:46,335:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x179187e90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1791118a0>)
2024-09-20 19:43:46,335:INFO:Checking exceptions
2024-09-20 19:43:46,335:INFO:Preloading libraries
2024-09-20 19:43:46,335:INFO:Set up data.
2024-09-20 19:43:46,337:INFO:Set up index.
2024-09-20 19:43:58,174:INFO:Initializing predict_model()
2024-09-20 19:43:58,174:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x179186fd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1791136a0>)
2024-09-20 19:43:58,174:INFO:Checking exceptions
2024-09-20 19:43:58,174:INFO:Preloading libraries
2024-09-20 19:43:58,174:INFO:Set up data.
2024-09-20 19:43:58,176:INFO:Set up index.
2024-09-20 19:43:59,407:INFO:Initializing predict_model()
2024-09-20 19:43:59,407:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17910ae10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x179113600>)
2024-09-20 19:43:59,407:INFO:Checking exceptions
2024-09-20 19:43:59,407:INFO:Preloading libraries
2024-09-20 19:43:59,407:INFO:Set up data.
2024-09-20 19:43:59,409:INFO:Set up index.
2024-09-20 19:45:08,568:INFO:Initializing predict_model()
2024-09-20 19:45:08,568:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17910be10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x179113b00>)
2024-09-20 19:45:08,568:INFO:Checking exceptions
2024-09-20 19:45:08,568:INFO:Preloading libraries
2024-09-20 19:45:08,569:INFO:Set up data.
2024-09-20 19:45:08,570:INFO:Set up index.
2024-09-20 19:45:10,445:INFO:Initializing predict_model()
2024-09-20 19:45:10,445:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17917a750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x179111760>)
2024-09-20 19:45:10,445:INFO:Checking exceptions
2024-09-20 19:45:10,445:INFO:Preloading libraries
2024-09-20 19:45:10,445:INFO:Set up data.
2024-09-20 19:45:10,447:INFO:Set up index.
2024-09-20 19:45:11,570:INFO:Initializing predict_model()
2024-09-20 19:45:11,570:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x179166490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x179113ba0>)
2024-09-20 19:45:11,570:INFO:Checking exceptions
2024-09-20 19:45:11,570:INFO:Preloading libraries
2024-09-20 19:45:11,570:INFO:Set up data.
2024-09-20 19:45:11,572:INFO:Set up index.
2024-09-20 19:48:54,449:INFO:Initializing predict_model()
2024-09-20 19:48:54,450:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17916a590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x179113600>)
2024-09-20 19:48:54,450:INFO:Checking exceptions
2024-09-20 19:48:54,450:INFO:Preloading libraries
2024-09-20 19:48:54,450:INFO:Set up data.
2024-09-20 19:48:54,452:INFO:Set up index.
2024-09-20 19:48:56,539:INFO:Initializing predict_model()
2024-09-20 19:48:56,539:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17917add0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x179111800>)
2024-09-20 19:48:56,539:INFO:Checking exceptions
2024-09-20 19:48:56,539:INFO:Preloading libraries
2024-09-20 19:48:56,540:INFO:Set up data.
2024-09-20 19:48:56,542:INFO:Set up index.
2024-09-20 19:48:58,581:INFO:Initializing predict_model()
2024-09-20 19:48:58,581:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x179138e10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1791131a0>)
2024-09-20 19:48:58,581:INFO:Checking exceptions
2024-09-20 19:48:58,581:INFO:Preloading libraries
2024-09-20 19:48:58,581:INFO:Set up data.
2024-09-20 19:48:58,583:INFO:Set up index.
2024-09-20 19:48:59,102:INFO:Initializing predict_model()
2024-09-20 19:48:59,102:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17910a2d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x179111760>)
2024-09-20 19:48:59,102:INFO:Checking exceptions
2024-09-20 19:48:59,102:INFO:Preloading libraries
2024-09-20 19:48:59,103:INFO:Set up data.
2024-09-20 19:48:59,105:INFO:Set up index.
2024-09-20 19:49:29,709:INFO:Initializing predict_model()
2024-09-20 19:49:29,710:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x179167010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1791139c0>)
2024-09-20 19:49:29,710:INFO:Checking exceptions
2024-09-20 19:49:29,710:INFO:Preloading libraries
2024-09-20 19:49:29,710:INFO:Set up data.
2024-09-20 19:49:29,712:INFO:Set up index.
2024-09-20 19:49:31,333:INFO:Initializing predict_model()
2024-09-20 19:49:31,333:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x179168190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x179113c40>)
2024-09-20 19:49:31,333:INFO:Checking exceptions
2024-09-20 19:49:31,333:INFO:Preloading libraries
2024-09-20 19:49:31,333:INFO:Set up data.
2024-09-20 19:49:31,335:INFO:Set up index.
2024-09-20 19:49:47,257:INFO:Initializing predict_model()
2024-09-20 19:49:47,257:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x179165e50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x179113f60>)
2024-09-20 19:49:47,257:INFO:Checking exceptions
2024-09-20 19:49:47,257:INFO:Preloading libraries
2024-09-20 19:49:47,258:INFO:Set up data.
2024-09-20 19:49:47,260:INFO:Set up index.
2024-09-20 19:50:17,072:INFO:Initializing predict_model()
2024-09-20 19:50:17,072:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x179168310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x179113880>)
2024-09-20 19:50:17,072:INFO:Checking exceptions
2024-09-20 19:50:17,072:INFO:Preloading libraries
2024-09-20 19:50:17,072:INFO:Set up data.
2024-09-20 19:50:17,073:INFO:Set up index.
2024-09-20 19:50:18,654:INFO:Initializing predict_model()
2024-09-20 19:50:18,654:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17916b490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x179113600>)
2024-09-20 19:50:18,654:INFO:Checking exceptions
2024-09-20 19:50:18,654:INFO:Preloading libraries
2024-09-20 19:50:18,655:INFO:Set up data.
2024-09-20 19:50:18,657:INFO:Set up index.
2024-09-20 19:50:28,870:INFO:Initializing predict_model()
2024-09-20 19:50:28,870:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17918f9d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1791139c0>)
2024-09-20 19:50:28,870:INFO:Checking exceptions
2024-09-20 19:50:28,870:INFO:Preloading libraries
2024-09-20 19:50:28,871:INFO:Set up data.
2024-09-20 19:50:28,873:INFO:Set up index.
2024-09-20 19:50:30,544:INFO:Initializing predict_model()
2024-09-20 19:50:30,544:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17910a610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17917c040>)
2024-09-20 19:50:30,544:INFO:Checking exceptions
2024-09-20 19:50:30,544:INFO:Preloading libraries
2024-09-20 19:50:30,544:INFO:Set up data.
2024-09-20 19:50:30,546:INFO:Set up index.
2024-09-20 19:51:28,839:INFO:Initializing predict_model()
2024-09-20 19:51:28,839:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x179164f50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1791114e0>)
2024-09-20 19:51:28,839:INFO:Checking exceptions
2024-09-20 19:51:28,839:INFO:Preloading libraries
2024-09-20 19:51:28,839:INFO:Set up data.
2024-09-20 19:51:28,841:INFO:Set up index.
2024-09-20 19:51:29,963:INFO:Initializing predict_model()
2024-09-20 19:51:29,963:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x179178450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178cb6f50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1791940e0>)
2024-09-20 19:51:29,963:INFO:Checking exceptions
2024-09-20 19:51:29,963:INFO:Preloading libraries
2024-09-20 19:51:29,963:INFO:Set up data.
2024-09-20 19:51:29,965:INFO:Set up index.
2024-09-20 19:52:41,547:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:52:41,548:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:52:41,548:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:52:41,548:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:52:41,975:INFO:Initializing load_model()
2024-09-20 19:52:41,975:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:53:57,255:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:53:57,256:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:53:57,256:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:53:57,256:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:53:57,496:INFO:Initializing load_model()
2024-09-20 19:53:57,496:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:53:58,332:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:53:58,332:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:53:58,332:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:53:58,332:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:53:58,574:INFO:Initializing load_model()
2024-09-20 19:53:58,574:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:54:19,455:INFO:Initializing predict_model()
2024-09-20 19:54:19,455:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17073f290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17073fc90>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x171519c60>)
2024-09-20 19:54:19,455:INFO:Checking exceptions
2024-09-20 19:54:19,455:INFO:Preloading libraries
2024-09-20 19:54:19,456:INFO:Set up data.
2024-09-20 19:54:19,459:INFO:Set up index.
2024-09-20 19:55:08,665:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:55:08,666:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:55:08,666:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:55:08,666:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:55:08,924:INFO:Initializing load_model()
2024-09-20 19:55:08,924:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:55:28,484:INFO:Initializing predict_model()
2024-09-20 19:55:28,484:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x160c29910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x15feb4490>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x160c19800>)
2024-09-20 19:55:28,484:INFO:Checking exceptions
2024-09-20 19:55:28,485:INFO:Preloading libraries
2024-09-20 19:55:28,485:INFO:Set up data.
2024-09-20 19:55:28,488:INFO:Set up index.
2024-09-20 19:55:34,897:INFO:Initializing predict_model()
2024-09-20 19:55:34,897:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x160c6dc50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x15feb4490>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x160c1a700>)
2024-09-20 19:55:34,897:INFO:Checking exceptions
2024-09-20 19:55:34,897:INFO:Preloading libraries
2024-09-20 19:55:34,898:INFO:Set up data.
2024-09-20 19:55:34,900:INFO:Set up index.
2024-09-20 19:57:05,743:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:57:05,743:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:57:05,743:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:57:05,743:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:57:06,115:INFO:Initializing load_model()
2024-09-20 19:57:06,115:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:57:08,880:INFO:Initializing predict_model()
2024-09-20 19:57:08,880:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16f684fd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x16ea3fa10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f639c60>)
2024-09-20 19:57:08,880:INFO:Checking exceptions
2024-09-20 19:57:08,880:INFO:Preloading libraries
2024-09-20 19:57:08,880:INFO:Set up data.
2024-09-20 19:57:08,883:INFO:Set up index.
2024-09-20 19:57:18,564:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:57:18,565:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:57:18,565:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:57:18,565:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:57:18,938:INFO:Initializing load_model()
2024-09-20 19:57:18,938:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:57:20,844:INFO:Initializing predict_model()
2024-09-20 19:57:20,845:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x169bb4250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x169b3fb10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16c119c60>)
2024-09-20 19:57:20,845:INFO:Checking exceptions
2024-09-20 19:57:20,845:INFO:Preloading libraries
2024-09-20 19:57:20,845:INFO:Set up data.
2024-09-20 19:57:20,848:INFO:Set up index.
2024-09-20 19:58:01,095:INFO:Initializing predict_model()
2024-09-20 19:58:01,096:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16c163490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x169b3fb10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16c11af20>)
2024-09-20 19:58:01,097:INFO:Checking exceptions
2024-09-20 19:58:01,097:INFO:Preloading libraries
2024-09-20 19:58:01,097:INFO:Set up data.
2024-09-20 19:58:01,099:INFO:Set up index.
2024-09-20 19:58:08,135:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:58:08,135:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:58:08,135:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:58:08,135:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:58:08,489:INFO:Initializing load_model()
2024-09-20 19:58:08,489:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:58:09,354:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:58:09,354:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:58:09,354:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:58:09,354:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:58:09,597:INFO:Initializing load_model()
2024-09-20 19:58:09,597:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:58:18,328:INFO:Initializing predict_model()
2024-09-20 19:58:18,328:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178ab4250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178a3fa10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x178ebe2a0>)
2024-09-20 19:58:18,328:INFO:Checking exceptions
2024-09-20 19:58:18,328:INFO:Preloading libraries
2024-09-20 19:58:18,329:INFO:Set up data.
2024-09-20 19:58:18,332:INFO:Set up index.
2024-09-20 19:58:20,760:INFO:Initializing predict_model()
2024-09-20 19:58:20,761:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178f03710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178a3fa10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x178ebd580>)
2024-09-20 19:58:20,761:INFO:Checking exceptions
2024-09-20 19:58:20,761:INFO:Preloading libraries
2024-09-20 19:58:20,761:INFO:Set up data.
2024-09-20 19:58:20,763:INFO:Set up index.
2024-09-20 19:58:21,221:INFO:Initializing predict_model()
2024-09-20 19:58:21,221:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178f0dad0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178a3fa10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x178ebe020>)
2024-09-20 19:58:21,221:INFO:Checking exceptions
2024-09-20 19:58:21,221:INFO:Preloading libraries
2024-09-20 19:58:21,221:INFO:Set up data.
2024-09-20 19:58:21,223:INFO:Set up index.
2024-09-20 19:58:21,530:INFO:Initializing predict_model()
2024-09-20 19:58:21,530:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178f0dbd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178a3fa10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x178ebe200>)
2024-09-20 19:58:21,530:INFO:Checking exceptions
2024-09-20 19:58:21,530:INFO:Preloading libraries
2024-09-20 19:58:21,531:INFO:Set up data.
2024-09-20 19:58:21,532:INFO:Set up index.
2024-09-20 19:58:21,715:INFO:Initializing predict_model()
2024-09-20 19:58:21,715:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178f0de10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178a3fa10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x178ebd260>)
2024-09-20 19:58:21,715:INFO:Checking exceptions
2024-09-20 19:58:21,715:INFO:Preloading libraries
2024-09-20 19:58:21,715:INFO:Set up data.
2024-09-20 19:58:21,717:INFO:Set up index.
2024-09-20 19:58:43,813:INFO:Initializing predict_model()
2024-09-20 19:58:43,813:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178f13950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178a3fa10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x178ebf380>)
2024-09-20 19:58:43,813:INFO:Checking exceptions
2024-09-20 19:58:43,813:INFO:Preloading libraries
2024-09-20 19:58:43,814:INFO:Set up data.
2024-09-20 19:58:43,816:INFO:Set up index.
2024-09-20 19:58:44,423:INFO:Initializing predict_model()
2024-09-20 19:58:44,424:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178f100d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178a3fa10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x178ebf7e0>)
2024-09-20 19:58:44,424:INFO:Checking exceptions
2024-09-20 19:58:44,424:INFO:Preloading libraries
2024-09-20 19:58:44,424:INFO:Set up data.
2024-09-20 19:58:44,426:INFO:Set up index.
2024-09-20 19:58:49,501:INFO:Initializing predict_model()
2024-09-20 19:58:49,501:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178f13650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178a3fa10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x178ebf420>)
2024-09-20 19:58:49,501:INFO:Checking exceptions
2024-09-20 19:58:49,501:INFO:Preloading libraries
2024-09-20 19:58:49,502:INFO:Set up data.
2024-09-20 19:58:49,504:INFO:Set up index.
2024-09-20 19:58:49,997:INFO:Initializing predict_model()
2024-09-20 19:58:49,997:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178f06910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x178a3fa10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x178ebdbc0>)
2024-09-20 19:58:49,997:INFO:Checking exceptions
2024-09-20 19:58:49,997:INFO:Preloading libraries
2024-09-20 19:58:49,997:INFO:Set up data.
2024-09-20 19:58:49,999:INFO:Set up index.
2024-09-20 19:59:44,130:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:59:44,131:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:59:44,131:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:59:44,131:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 19:59:44,496:INFO:Initializing load_model()
2024-09-20 19:59:44,496:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 19:59:52,157:INFO:Initializing predict_model()
2024-09-20 19:59:52,157:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x158326d10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x15759cc50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x158312200>)
2024-09-20 19:59:52,157:INFO:Checking exceptions
2024-09-20 19:59:52,157:INFO:Preloading libraries
2024-09-20 19:59:52,158:INFO:Set up data.
2024-09-20 19:59:52,161:INFO:Set up index.
2024-09-20 19:59:54,773:INFO:Initializing predict_model()
2024-09-20 19:59:54,773:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1582efd50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x15759cc50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1583119e0>)
2024-09-20 19:59:54,773:INFO:Checking exceptions
2024-09-20 19:59:54,773:INFO:Preloading libraries
2024-09-20 19:59:54,774:INFO:Set up data.
2024-09-20 19:59:54,776:INFO:Set up index.
2024-09-20 19:59:56,002:INFO:Initializing predict_model()
2024-09-20 19:59:56,002:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x158363150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x15759cc50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x158311da0>)
2024-09-20 19:59:56,002:INFO:Checking exceptions
2024-09-20 19:59:56,002:INFO:Preloading libraries
2024-09-20 19:59:56,002:INFO:Set up data.
2024-09-20 19:59:56,005:INFO:Set up index.
2024-09-20 20:00:00,525:INFO:Initializing predict_model()
2024-09-20 20:00:00,525:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15835ba10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x15759cc50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x158312200>)
2024-09-20 20:00:00,525:INFO:Checking exceptions
2024-09-20 20:00:00,525:INFO:Preloading libraries
2024-09-20 20:00:00,525:INFO:Set up data.
2024-09-20 20:00:00,527:INFO:Set up index.
2024-09-20 20:14:15,693:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 20:14:15,693:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 20:14:15,693:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 20:14:15,693:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 20:14:16,087:INFO:Initializing load_model()
2024-09-20 20:14:16,087:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 20:14:17,000:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 20:14:17,000:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 20:14:17,000:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 20:14:17,000:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-20 20:14:17,244:INFO:Initializing load_model()
2024-09-20 20:14:17,244:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-20 20:14:21,289:INFO:Initializing predict_model()
2024-09-20 20:14:21,290:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17efdb250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17cb3fa90>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17efc5f80>)
2024-09-20 20:14:21,290:INFO:Checking exceptions
2024-09-20 20:14:21,290:INFO:Preloading libraries
2024-09-20 20:14:21,292:INFO:Set up data.
2024-09-20 20:14:21,296:INFO:Set up index.
2024-09-20 20:14:23,992:INFO:Initializing predict_model()
2024-09-20 20:14:23,993:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17efdae10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17cb3fa90>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17efc5d00>)
2024-09-20 20:14:23,993:INFO:Checking exceptions
2024-09-20 20:14:23,993:INFO:Preloading libraries
2024-09-20 20:14:23,993:INFO:Set up data.
2024-09-20 20:14:23,995:INFO:Set up index.
2024-09-20 20:14:28,492:INFO:Initializing predict_model()
2024-09-20 20:14:28,492:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17efb8090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17cb3fa90>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17efc53a0>)
2024-09-20 20:14:28,492:INFO:Checking exceptions
2024-09-20 20:14:28,492:INFO:Preloading libraries
2024-09-20 20:14:28,492:INFO:Set up data.
2024-09-20 20:14:28,494:INFO:Set up index.
2024-09-23 11:58:06,209:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 11:58:06,209:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 11:58:06,210:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 11:58:06,210:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 11:58:07,079:INFO:Initializing load_model()
2024-09-23 11:58:07,079:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-23 11:58:09,012:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 11:58:09,012:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 11:58:09,012:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 11:58:09,012:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 11:58:09,271:INFO:Initializing load_model()
2024-09-23 11:58:09,271:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-23 11:58:27,922:INFO:Initializing predict_model()
2024-09-23 11:58:27,923:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15d59d6d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x15c03f950>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15d54ea20>)
2024-09-23 11:58:27,923:INFO:Checking exceptions
2024-09-23 11:58:27,923:INFO:Preloading libraries
2024-09-23 11:58:27,926:INFO:Set up data.
2024-09-23 11:58:27,931:INFO:Set up index.
2024-09-23 11:58:33,853:INFO:Initializing predict_model()
2024-09-23 11:58:33,853:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15d561ad0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x15c03f950>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15d54d6c0>)
2024-09-23 11:58:33,853:INFO:Checking exceptions
2024-09-23 11:58:33,853:INFO:Preloading libraries
2024-09-23 11:58:33,854:INFO:Set up data.
2024-09-23 11:58:33,856:INFO:Set up index.
2024-09-23 11:58:40,485:INFO:Initializing predict_model()
2024-09-23 11:58:40,485:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15d560a10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x15c03f950>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15d54de40>)
2024-09-23 11:58:40,485:INFO:Checking exceptions
2024-09-23 11:58:40,485:INFO:Preloading libraries
2024-09-23 11:58:40,485:INFO:Set up data.
2024-09-23 11:58:40,487:INFO:Set up index.
2024-09-23 11:58:53,521:INFO:Initializing predict_model()
2024-09-23 11:58:53,522:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15d59e950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x15c03f950>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15d54d6c0>)
2024-09-23 11:58:53,522:INFO:Checking exceptions
2024-09-23 11:58:53,522:INFO:Preloading libraries
2024-09-23 11:58:53,523:INFO:Set up data.
2024-09-23 11:58:53,525:INFO:Set up index.
2024-09-23 11:58:57,904:INFO:Initializing predict_model()
2024-09-23 11:58:57,904:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15d56b8d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x15c03f950>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15d54e0c0>)
2024-09-23 11:58:57,904:INFO:Checking exceptions
2024-09-23 11:58:57,905:INFO:Preloading libraries
2024-09-23 11:58:57,905:INFO:Set up data.
2024-09-23 11:58:57,908:INFO:Set up index.
2024-09-23 11:59:01,916:INFO:Initializing predict_model()
2024-09-23 11:59:01,916:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15d59dd10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x15c03f950>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15d54e980>)
2024-09-23 11:59:01,916:INFO:Checking exceptions
2024-09-23 11:59:01,916:INFO:Preloading libraries
2024-09-23 11:59:01,916:INFO:Set up data.
2024-09-23 11:59:01,918:INFO:Set up index.
2024-09-23 11:59:08,035:INFO:Initializing predict_model()
2024-09-23 11:59:08,035:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15d59e950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x15c03f950>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15d54d6c0>)
2024-09-23 11:59:08,035:INFO:Checking exceptions
2024-09-23 11:59:08,035:INFO:Preloading libraries
2024-09-23 11:59:08,035:INFO:Set up data.
2024-09-23 11:59:08,037:INFO:Set up index.
2024-09-23 11:59:16,333:INFO:Initializing predict_model()
2024-09-23 11:59:16,333:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15d59cdd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x15c03f950>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15d54ed40>)
2024-09-23 11:59:16,333:INFO:Checking exceptions
2024-09-23 11:59:16,333:INFO:Preloading libraries
2024-09-23 11:59:16,334:INFO:Set up data.
2024-09-23 11:59:16,336:INFO:Set up index.
2024-09-23 11:59:20,235:INFO:Initializing predict_model()
2024-09-23 11:59:20,235:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15d59d510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x15c03f950>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15d54dee0>)
2024-09-23 11:59:20,236:INFO:Checking exceptions
2024-09-23 11:59:20,236:INFO:Preloading libraries
2024-09-23 11:59:20,236:INFO:Set up data.
2024-09-23 11:59:20,238:INFO:Set up index.
2024-09-23 11:59:27,213:INFO:Initializing predict_model()
2024-09-23 11:59:27,213:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15d560050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x15c03f950>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15d54dd00>)
2024-09-23 11:59:27,213:INFO:Checking exceptions
2024-09-23 11:59:27,213:INFO:Preloading libraries
2024-09-23 11:59:27,213:INFO:Set up data.
2024-09-23 11:59:27,215:INFO:Set up index.
2024-09-23 11:59:30,818:INFO:Initializing predict_model()
2024-09-23 11:59:30,818:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15d59bfd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x15c03f950>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15d54f7e0>)
2024-09-23 11:59:30,818:INFO:Checking exceptions
2024-09-23 11:59:30,818:INFO:Preloading libraries
2024-09-23 11:59:30,818:INFO:Set up data.
2024-09-23 11:59:30,820:INFO:Set up index.
2024-09-23 11:59:36,538:INFO:Initializing predict_model()
2024-09-23 11:59:36,538:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15d561950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x15c03f950>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15d54d4e0>)
2024-09-23 11:59:36,538:INFO:Checking exceptions
2024-09-23 11:59:36,538:INFO:Preloading libraries
2024-09-23 11:59:36,538:INFO:Set up data.
2024-09-23 11:59:36,541:INFO:Set up index.
2024-09-23 11:59:39,032:INFO:Initializing predict_model()
2024-09-23 11:59:39,032:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15d5a8990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x15c03f950>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15d54dbc0>)
2024-09-23 11:59:39,032:INFO:Checking exceptions
2024-09-23 11:59:39,032:INFO:Preloading libraries
2024-09-23 11:59:39,033:INFO:Set up data.
2024-09-23 11:59:39,034:INFO:Set up index.
2024-09-23 11:59:42,530:INFO:Initializing predict_model()
2024-09-23 11:59:42,530:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15d5ab510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x15c03f950>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15d54d440>)
2024-09-23 11:59:42,530:INFO:Checking exceptions
2024-09-23 11:59:42,530:INFO:Preloading libraries
2024-09-23 11:59:42,530:INFO:Set up data.
2024-09-23 11:59:42,532:INFO:Set up index.
2024-09-23 11:59:45,164:INFO:Initializing predict_model()
2024-09-23 11:59:45,164:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15d5aa950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x15c03f950>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15d54dda0>)
2024-09-23 11:59:45,164:INFO:Checking exceptions
2024-09-23 11:59:45,164:INFO:Preloading libraries
2024-09-23 11:59:45,164:INFO:Set up data.
2024-09-23 11:59:45,167:INFO:Set up index.
2024-09-23 11:59:49,115:INFO:Initializing predict_model()
2024-09-23 11:59:49,115:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15d59b510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x15c03f950>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15d54d760>)
2024-09-23 11:59:49,115:INFO:Checking exceptions
2024-09-23 11:59:49,115:INFO:Preloading libraries
2024-09-23 11:59:49,116:INFO:Set up data.
2024-09-23 11:59:49,118:INFO:Set up index.
2024-09-23 12:02:38,452:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 12:02:38,452:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 12:02:38,452:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 12:02:38,452:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 12:02:38,825:INFO:Initializing load_model()
2024-09-23 12:02:38,825:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-23 12:02:39,913:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 12:02:39,913:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 12:02:39,913:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 12:02:39,913:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 12:02:40,167:INFO:Initializing load_model()
2024-09-23 12:02:40,167:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-23 12:02:43,415:INFO:Initializing predict_model()
2024-09-23 12:02:43,415:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17874fe50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17913fa10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17bd52660>)
2024-09-23 12:02:43,415:INFO:Checking exceptions
2024-09-23 12:02:43,415:INFO:Preloading libraries
2024-09-23 12:02:43,416:INFO:Set up data.
2024-09-23 12:02:43,419:INFO:Set up index.
2024-09-23 12:02:46,698:INFO:Initializing predict_model()
2024-09-23 12:02:46,699:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17bd4ae90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17913fa10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17bd51b20>)
2024-09-23 12:02:46,699:INFO:Checking exceptions
2024-09-23 12:02:46,699:INFO:Preloading libraries
2024-09-23 12:02:46,699:INFO:Set up data.
2024-09-23 12:02:46,701:INFO:Set up index.
2024-09-23 12:02:49,300:INFO:Initializing predict_model()
2024-09-23 12:02:49,300:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17bd9e250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17913fa10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17bd519e0>)
2024-09-23 12:02:49,300:INFO:Checking exceptions
2024-09-23 12:02:49,300:INFO:Preloading libraries
2024-09-23 12:02:49,300:INFO:Set up data.
2024-09-23 12:02:49,303:INFO:Set up index.
2024-09-23 12:16:00,495:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 12:16:00,495:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 12:16:00,496:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 12:16:00,496:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 12:16:00,907:INFO:Initializing load_model()
2024-09-23 12:16:00,907:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-23 12:16:01,814:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 12:16:01,814:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 12:16:01,814:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 12:16:01,814:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 12:16:02,088:INFO:Initializing load_model()
2024-09-23 12:16:02,088:INFO:load_model(model_name=model/best_titanic_model, platform=None, authentication=None, verbose=True)
2024-09-23 12:16:04,955:INFO:Initializing predict_model()
2024-09-23 12:16:04,955:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17e66c4d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17baa6250>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e652660>)
2024-09-23 12:16:04,955:INFO:Checking exceptions
2024-09-23 12:16:04,955:INFO:Preloading libraries
2024-09-23 12:16:04,957:INFO:Set up data.
2024-09-23 12:16:04,961:INFO:Set up index.
2024-09-23 12:16:09,492:INFO:Initializing predict_model()
2024-09-23 12:16:09,492:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17e6a1010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17baa6250>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e6514e0>)
2024-09-23 12:16:09,492:INFO:Checking exceptions
2024-09-23 12:16:09,492:INFO:Preloading libraries
2024-09-23 12:16:09,493:INFO:Set up data.
2024-09-23 12:16:09,495:INFO:Set up index.
2024-09-23 12:16:14,696:INFO:Initializing predict_model()
2024-09-23 12:16:14,697:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17e6476d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17baa6250>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e651a80>)
2024-09-23 12:16:14,697:INFO:Checking exceptions
2024-09-23 12:16:14,697:INFO:Preloading libraries
2024-09-23 12:16:14,698:INFO:Set up data.
2024-09-23 12:16:14,700:INFO:Set up index.
2024-09-23 12:16:19,795:INFO:Initializing predict_model()
2024-09-23 12:16:19,795:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17e6a0490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17baa6250>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e651760>)
2024-09-23 12:16:19,795:INFO:Checking exceptions
2024-09-23 12:16:19,795:INFO:Preloading libraries
2024-09-23 12:16:19,796:INFO:Set up data.
2024-09-23 12:16:19,799:INFO:Set up index.
2024-09-23 12:16:22,777:INFO:Initializing predict_model()
2024-09-23 12:16:22,777:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17e661510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Pclass', 'Age', 'travel_party'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Sex'],
                                    transformer=OrdinalEncoder(cols=['Sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x17baa6250>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e651440>)
2024-09-23 12:16:22,777:INFO:Checking exceptions
2024-09-23 12:16:22,777:INFO:Preloading libraries
2024-09-23 12:16:22,778:INFO:Set up data.
2024-09-23 12:16:22,780:INFO:Set up index.
